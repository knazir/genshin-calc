{"version":3,"sources":["data/characters/index.js","data/elements.js","data/weapons.js","data/characters sync /.json$","data/characters sync /^/.*$","utils/ReactUtils.js","utils/MathUtils.js","data/stats.js","utils/ArtifactUtils.js","calculator/StatsPanel.jsx","calculator/ArtifactsTab.jsx","utils/StringUtils.js","calculator/BaseStatsTab.jsx","calculator/SpecialStatForm.jsx","calculator/SpecialStatsPanel.jsx","calculator/BonusStatsTab.jsx","calculator/CharacterInfoPanel.jsx","data/embonus.js","utils/DamageUtils.js","calculator/EnemyInfoPanel.jsx","calculator/SkillInfoPanel.jsx","calculator/DamageInfoTab.jsx","calculator/ExpectedDamageTab.jsx","main/SaveDialog.jsx","calculator/TotalsTab.jsx","utils/AnalyticsUtils.js","calculator/Calculator.jsx","main/LoadDialog.jsx","main/Welcome.jsx","App.jsx","index.jsx"],"names":["context","require","processedCharacters","keys","filename","replace","resource","JSON","parse","stringify","validElements","Set","Object","elements","validWeapons","weapons","values","charData","has","weapon","console","error","name","element","entries","baseStats","level","levelBaseStats","Number","anemo","cryo","dendro","electro","geo","hydro","physical","pyro","bow","catalyst","claymore","polearm","sword","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","resolve","module","exports","this","_successHandler","_errorHandler","_uniqueIds","key","successHandler","errorHandler","message","MathUtils","value","decimalPlaces","multiplier","i","Math","round","percentage","atk","atkPercent","def","defPercent","hp","hpPercent","critRate","critDamage","elementalMastery","energyRecharge","healingBonus","elementalBonus","ArtifactUtils","stats","newStats","assign","stat","totalStats","_filledStats","artifacts","forEach","artifact","statType","statValue","_roundStats","characterStats","weaponStats","artifactsStats","miscStats","specialStats","finalStats","_sumStats","scaledAtk","percentIncrease","ceil","scaledDef","scaledHp","type","total","filter","statCollection","filledStats","roundedStats","roundToMap","roundToDecimals","StatsPanel","defaultData","data","onData","readOnly","requiredStats","title","statsListFromObj","statsObj","indexOf","defaultAppliedStats","requiredStatType","existingIndex","findIndex","defaultValue","push","useState","appliedStats","setAppliedStats","newStatType","setNewStatType","useEffect","statInputs","canDeleteStat","typographyProps","variant","FormGroup","row","className","IconButton","aria-label","disabled","onClick","typeToDelete","slice","onStatDelete","Typography","TextField","inputProps","style","textAlign","onChange","typeToUpdate","updatedStat","target","onStatChange","statTypeItems","typeToFind","MenuItem","Paper","FormControl","InputLabel","Select","labelId","Button","startIcon","find","ReactUtils","onError","ArtifactsTab","flowerStats","onFlowerStats","featherStats","onFeatherStats","timepieceStats","onTimepieceStats","gobletStats","onGobletStats","hatStats","onHatStats","setEffectsStats","onSetEffectsStats","GridList","cellHeight","spacing","cols","GridListTile","StringUtils","str","toUpperCase","BaseStatsTab","character","baseCharacterStats","onCharacterStats","onWeaponStats","hasBaseCharStats","Boolean","baseCharacter","numCols","baseStatsTitle","capitalize","SpecialStatForm","defaultSpecialStat","isCreationForm","onAdd","onDelete","onUpdate","isValid","finalStatType","percentChange","statGroup","statGroupType","getCurrentSpecialStat","useNewUniqueId","actualUniqueId","uniqueId","nextUniqueId","setFinalStatType","setPercentChange","setStatGroup","setStatGroupType","defaultUniqueId","setUniqueId","specialStat","currentSpecialStat","newSpecialStat","SpecialStatsPanel","defaultSpecialStats","onSpecialStats","setSpecialStats","onDeleteSpecialStat","onUpdateSpecialStat","statForms","BonusStatsTab","onMiscStats","CharacterInfoPanel","setBaseCharacter","weaponType","setWeaponType","setLevel","baseCharacterItems","characters","charId","weaponTypeItems","wepId","wepName","maxLevelWithStats","reduce","a","b","max","Infinity","label","names","electroCharge","melt","overload","shatter","superconduct","swirl","vaporize","multipliers","DamageUtils","bonuses","embonus","enemyLevel","result","characterLevel","defenseReduction","elementalRes","elementalResReduction","netElementalRes","skillDamage","bonusDamage","applyElementalBonus","totalSkillDamage","enemyDefenseMultiplier","nonCrit","crit","weightedNonCrit","doesShatter","sort","activatingElement","baseDamage","reactionMult","elementalMasteryMult","enemyResistanceMultiplier","elementalReactionMult","amplifyingMult","scaledBaseDamage","elementalDamage","_getTransformativeReactionDamage","scaledElementalDamage","scaledDamage","EnemyInfoPanel","setElementalRes","setElementalResReduction","setDefenseReduction","getEnemyDefense","defense","setDefense","getEnemyDefenseMultiplier","defenseMult","setDefenseMult","getEnemyResistanceMultiplier","resMult","setRestMult","Divider","SkillInfoPanel","damage","setDamage","setBonusDamage","setElement","setDoesShatter","doesApplyElementalBonus","setDoesApplyElementalBonus","getTotalSkillDamage","totalDamage","setTotalDamage","elementItems","elId","elName","doesShatterCheckbox","Checkbox","checked","doesApplyElementalBonusCheckbox","FormControlLabel","control","DamageInfoTab","onCharacter","enemy","onEnemy","skill","onSkill","ExpectedDamageTab","defaultErBonuses","onErBonuses","erBonuses","setErBonuses","reactionTypes","getDamageTypes","baseNonCrit","getBaseNonCritDamage","baseCrit","getBaseCritDamage","baseAverage","getAverageDamage","baseRow","TableRow","TableCell","component","scope","reactionRows","getReactionMultiplier","getElementalMasteryMultiplier","elementalNonCrit","getElementalReactionDamage","elementalCrit","elementalAverage","newBonuses","onErBonus","colSpan","TableContainer","Table","TableHead","TableBody","SaveDialog","open","setOpen","saveData","isCopyingLink","setIsCopyingLink","saveDataText","shareableLink","encodedData","btoa","window","location","protocol","host","pathname","getShareableLink","shareableLinkTextareaRef","current","select","document","execCommand","onSuccess","saveDataTextareaRef","useRef","shareableLinkStyle","display","Dialog","fullWidth","onClose","DialogTitle","DialogContent","DialogContentText","multiline","margin","inputRef","fontFamily","DialogActions","focus","TotalsTab","ReactGA","initialize","_isDisabled","params","event","getBaseCharacterStatsByLevel","permanentBaseCharacterStats","filterEmptyStats","addStats","specifiedLevel","Calculator","isSavePopupVisible","setIsSavePopupVisible","setSaveData","tab","setTab","setCharacter","setEnemy","setSkill","setCharacterStats","setWeaponStats","setSetEffectsStats","setFlowerStats","setFeatherStats","setTimepieceStats","setGobletStats","setHatStats","setMiscStats","getDefaultErBonuses","setBaseStats","setArtifactsStats","setFinalStats","getFinalStats","tabNames","tabs","Tab","tabPanels","gutterBottom","AnalyticsUtils","logEvent","category","action","Tabs","scrollButtons","LoadDialog","onSaveDataSubmit","setError","setSaveDataText","processSaveData","autoFocus","onKeyDown","preventDefault","color","Welcome","loadApp","isPopupVisible","setIsPopupVisible","App","isLoaded","setIsLoaded","isSuccessOpen","setIsSuccessOpen","successMessage","setSuccessMessage","isErrorOpen","setIsErrorOpen","errorMessage","setErrorMessage","useLocation","history","useHistory","query","URLSearchParams","search","registerSuccessHandler","registerErrorHandler","saveDataFromUrl","atob","get","delete","theme","React","useMemo","createMuiTheme","palette","loadedSaveData","ThemeProvider","CssBaseline","Link","href","Snackbar","autoHideDuration","Alert","severity","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.df9c98fc.chunk.js","sourcesContent":["import elements from \"../elements\";\r\nimport weapons from \"../weapons\";\r\n\r\nconst context = require.context(\"./\", true, /.json$/);\r\nconst processedCharacters = {};\r\nfor (const key of context.keys()) {\r\n    const filename = key.replace(\"./\", \"\");\r\n    const resource = require(`./${filename}`);\r\n    const namespace = filename.replace(\".json\", \"\");\r\n    processedCharacters[namespace] = JSON.parse(JSON.stringify(resource));\r\n}\r\n\r\nconst validElements = new Set(Object.keys(elements));\r\nconst validWeapons = new Set(Object.keys(weapons));\r\n\r\nfor (const charData of Object.values(processedCharacters)) {\r\n    if (!validWeapons.has(charData.weapon)) {\r\n        console.error(`Invalid weapon data found for character ${charData.name}, (${charData.weapon})`);\r\n    }\r\n\r\n    if (!validElements.has(charData.element)) {\r\n        console.error(`Invalid element data found for character ${charData.name}, (${charData.element})`);\r\n    }\r\n\r\n    for (const [level, levelBaseStats] of Object.entries(charData.baseStats)) {\r\n        charData.baseStats[Number(level)] = levelBaseStats;\r\n        delete charData[level];\r\n    }\r\n}\r\n\r\nexport default processedCharacters;\r\n\r\n","export default {\r\n  anemo: \"anemo\",\r\n  cryo: \"cryo\",\r\n  dendro: \"dendro\",\r\n  electro: \"electro\",\r\n  geo: \"geo\",\r\n  hydro: \"hydro\",\r\n  physical: \"physical\",\r\n  pyro: \"pyro\"\r\n};\r\n","export default {\r\n  bow: \"bow\",\r\n  catalyst: \"catalyst\",\r\n  claymore: \"claymore\",\r\n  polearm: \"polearm\",\r\n  sword: \"sword\"\r\n};\r\n","var map = {\n\t\"./albedo.json\": 76,\n\t\"./aloy.json\": 77,\n\t\"./amber.json\": 78,\n\t\"./arataki.json\": 79,\n\t\"./barbara.json\": 80,\n\t\"./beidou.json\": 81,\n\t\"./bennett.json\": 82,\n\t\"./candace.json\": 83,\n\t\"./chongyun.json\": 84,\n\t\"./collei.json\": 85,\n\t\"./cyno.json\": 86,\n\t\"./diluc.json\": 87,\n\t\"./diona.json\": 88,\n\t\"./dori.json\": 89,\n\t\"./eula.json\": 90,\n\t\"./fischl.json\": 91,\n\t\"./ganyu.json\": 92,\n\t\"./gorou.json\": 93,\n\t\"./hu.json\": 94,\n\t\"./jean.json\": 95,\n\t\"./kaedehara.json\": 96,\n\t\"./kaeya.json\": 97,\n\t\"./kamisato.json\": 98,\n\t\"./keqing.json\": 99,\n\t\"./klee.json\": 100,\n\t\"./kujou.json\": 101,\n\t\"./kuki.json\": 102,\n\t\"./lisa.json\": 103,\n\t\"./mona.json\": 104,\n\t\"./nilou.json\": 105,\n\t\"./ningguang.json\": 106,\n\t\"./noelle.json\": 107,\n\t\"./qiqi.json\": 108,\n\t\"./raiden.json\": 109,\n\t\"./razor.json\": 110,\n\t\"./rosaria.json\": 111,\n\t\"./sangonomiya.json\": 112,\n\t\"./sayu.json\": 113,\n\t\"./shenhe.json\": 114,\n\t\"./shikanoin.json\": 115,\n\t\"./sucrose.json\": 116,\n\t\"./tartaglia.json\": 117,\n\t\"./thoma.json\": 118,\n\t\"./tighnari.json\": 119,\n\t\"./traveler.json\": 120,\n\t\"./venti.json\": 121,\n\t\"./xiangling.json\": 122,\n\t\"./xiao.json\": 123,\n\t\"./xingqiu.json\": 124,\n\t\"./xinyan.json\": 125,\n\t\"./yae.json\": 126,\n\t\"./yanfei.json\": 127,\n\t\"./yelan.json\": 128,\n\t\"./yoimiya.json\": 129,\n\t\"./yun.json\": 130,\n\t\"./zhongli.json\": 131\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 165;","var map = {\n\t\"./\": 30,\n\t\"./albedo\": 76,\n\t\"./albedo.json\": 76,\n\t\"./aloy\": 77,\n\t\"./aloy.json\": 77,\n\t\"./amber\": 78,\n\t\"./amber.json\": 78,\n\t\"./arataki\": 79,\n\t\"./arataki.json\": 79,\n\t\"./barbara\": 80,\n\t\"./barbara.json\": 80,\n\t\"./beidou\": 81,\n\t\"./beidou.json\": 81,\n\t\"./bennett\": 82,\n\t\"./bennett.json\": 82,\n\t\"./candace\": 83,\n\t\"./candace.json\": 83,\n\t\"./chongyun\": 84,\n\t\"./chongyun.json\": 84,\n\t\"./collei\": 85,\n\t\"./collei.json\": 85,\n\t\"./cyno\": 86,\n\t\"./cyno.json\": 86,\n\t\"./diluc\": 87,\n\t\"./diluc.json\": 87,\n\t\"./diona\": 88,\n\t\"./diona.json\": 88,\n\t\"./dori\": 89,\n\t\"./dori.json\": 89,\n\t\"./eula\": 90,\n\t\"./eula.json\": 90,\n\t\"./fischl\": 91,\n\t\"./fischl.json\": 91,\n\t\"./ganyu\": 92,\n\t\"./ganyu.json\": 92,\n\t\"./gorou\": 93,\n\t\"./gorou.json\": 93,\n\t\"./hu\": 94,\n\t\"./hu.json\": 94,\n\t\"./index\": 30,\n\t\"./index.js\": 30,\n\t\"./jean\": 95,\n\t\"./jean.json\": 95,\n\t\"./kaedehara\": 96,\n\t\"./kaedehara.json\": 96,\n\t\"./kaeya\": 97,\n\t\"./kaeya.json\": 97,\n\t\"./kamisato\": 98,\n\t\"./kamisato.json\": 98,\n\t\"./keqing\": 99,\n\t\"./keqing.json\": 99,\n\t\"./klee\": 100,\n\t\"./klee.json\": 100,\n\t\"./kujou\": 101,\n\t\"./kujou.json\": 101,\n\t\"./kuki\": 102,\n\t\"./kuki.json\": 102,\n\t\"./lisa\": 103,\n\t\"./lisa.json\": 103,\n\t\"./mona\": 104,\n\t\"./mona.json\": 104,\n\t\"./nilou\": 105,\n\t\"./nilou.json\": 105,\n\t\"./ningguang\": 106,\n\t\"./ningguang.json\": 106,\n\t\"./noelle\": 107,\n\t\"./noelle.json\": 107,\n\t\"./qiqi\": 108,\n\t\"./qiqi.json\": 108,\n\t\"./raiden\": 109,\n\t\"./raiden.json\": 109,\n\t\"./razor\": 110,\n\t\"./razor.json\": 110,\n\t\"./rosaria\": 111,\n\t\"./rosaria.json\": 111,\n\t\"./sangonomiya\": 112,\n\t\"./sangonomiya.json\": 112,\n\t\"./sayu\": 113,\n\t\"./sayu.json\": 113,\n\t\"./shenhe\": 114,\n\t\"./shenhe.json\": 114,\n\t\"./shikanoin\": 115,\n\t\"./shikanoin.json\": 115,\n\t\"./sucrose\": 116,\n\t\"./sucrose.json\": 116,\n\t\"./tartaglia\": 117,\n\t\"./tartaglia.json\": 117,\n\t\"./thoma\": 118,\n\t\"./thoma.json\": 118,\n\t\"./tighnari\": 119,\n\t\"./tighnari.json\": 119,\n\t\"./traveler\": 120,\n\t\"./traveler.json\": 120,\n\t\"./venti\": 121,\n\t\"./venti.json\": 121,\n\t\"./xiangling\": 122,\n\t\"./xiangling.json\": 122,\n\t\"./xiao\": 123,\n\t\"./xiao.json\": 123,\n\t\"./xingqiu\": 124,\n\t\"./xingqiu.json\": 124,\n\t\"./xinyan\": 125,\n\t\"./xinyan.json\": 125,\n\t\"./yae\": 126,\n\t\"./yae.json\": 126,\n\t\"./yanfei\": 127,\n\t\"./yanfei.json\": 127,\n\t\"./yelan\": 128,\n\t\"./yelan.json\": 128,\n\t\"./yoimiya\": 129,\n\t\"./yoimiya.json\": 129,\n\t\"./yun\": 130,\n\t\"./yun.json\": 130,\n\t\"./zhongli\": 131,\n\t\"./zhongli.json\": 131\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 166;","class ReactUtils {\r\n  constructor() {\r\n    this._successHandler = null;\r\n    this._errorHandler = null;\r\n    this._uniqueIds = {};\r\n  }\r\n\r\n  nextUniqueId(key) {\r\n    if (!this._uniqueIds[key]) this._uniqueIds[key] = 1;\r\n    const id = this._uniqueIds[key];\r\n    this._uniqueIds[key]++;\r\n    return `${key}_${id}`;\r\n  }\r\n\r\n  registerSuccessHandler(successHandler) {\r\n    this._successHandler = successHandler;\r\n  }\r\n\r\n  registerErrorHandler(errorHandler) {\r\n    this._errorHandler = errorHandler;\r\n  }\r\n\r\n  onSuccess(message) {\r\n    if (this._successHandler) this._successHandler(message);\r\n  }\r\n\r\n  onError(message) {\r\n    if (this._errorHandler) this._errorHandler(message);\r\n  }\r\n}\r\n\r\nexport default new ReactUtils();\r\n","export default class MathUtils {\r\n  static roundToDecimals(value, decimalPlaces) {\r\n    let multiplier = 1;\r\n    for (let i = 0; i < decimalPlaces; i++) {\r\n      multiplier *= 10;\r\n    }\r\n    return Math.round(value * multiplier) / multiplier;\r\n  }\r\n\r\n  static percentIncrease(value, percentage) {\r\n    return value * (1 + (percentage / 100));\r\n  }\r\n}\r\n","export default {\r\n  atk: \"ATK\",\r\n  atkPercent: \"ATK %\",\r\n  def: \"DEF\",\r\n  defPercent: \"DEF %\",\r\n  hp: \"HP\",\r\n  hpPercent: \"HP %\",\r\n  critRate: \"CRIT Rate %\",\r\n  critDamage: \"CRIT DMG %\",\r\n  elementalMastery: \"Elemental Mastery\",\r\n  energyRecharge: \"Energy Recharge %\",\r\n  healingBonus: \"Healing Bonus %\",\r\n  elementalBonus: \"Elemental DMG %\"\r\n};\r\n","import MathUtils from \"./MathUtils\";\r\n\r\nimport stats from \"../data/stats\";\r\n\r\nexport default class ArtifactUtils {\r\n  static filterEmptyStats(stats) {\r\n    const newStats = Object.assign({}, stats);\r\n    for (const [stat, value] of Object.entries(newStats)) {\r\n      if (!value) delete newStats[stat];\r\n    }\r\n    return newStats;\r\n  }\r\n\r\n  static addStats(...artifacts) {\r\n    const totalStats = this._filledStats({});\r\n    artifacts.forEach(artifact => {\r\n      Object.entries(artifact).forEach(([statType, statValue]) => {\r\n        totalStats[statType] = totalStats[statType] == null ? statValue : totalStats[statType] + statValue;\r\n      });\r\n    });\r\n    return this._roundStats(totalStats);\r\n  }\r\n\r\n  static getFinalStats(characterStats, weaponStats, baseStats, artifactsStats, miscStats, specialStats) {\r\n    characterStats = this._filledStats(characterStats);\r\n    weaponStats = this._filledStats(weaponStats);\r\n    baseStats = this._filledStats(baseStats);\r\n    artifactsStats = this._filledStats(artifactsStats);\r\n    miscStats = this._filledStats(miscStats);\r\n    const finalStats = {};\r\n\r\n    // ATK\r\n    const atkPercent = this._sumStats(\"atkPercent\", baseStats, artifactsStats, miscStats);\r\n    const scaledAtk = MathUtils.percentIncrease(baseStats.atk, atkPercent);\r\n    finalStats.atk = Math.ceil(scaledAtk + artifactsStats.atk + miscStats.atk);\r\n\r\n    // DEF\r\n    const defPercent = this._sumStats(\"defPercent\", baseStats, artifactsStats, miscStats);\r\n    const scaledDef = MathUtils.percentIncrease(characterStats.def, defPercent);\r\n    finalStats.def = Math.ceil(scaledDef + weaponStats.def + artifactsStats.def + miscStats.def);\r\n\r\n    // HP\r\n    const hpPercent = this._sumStats(\"hpPercent\", baseStats, artifactsStats, miscStats);\r\n    const scaledHp = MathUtils.percentIncrease(characterStats.hp, hpPercent);\r\n    finalStats.hp = Math.ceil(scaledHp + weaponStats.hp + artifactsStats.hp + miscStats.hp);\r\n\r\n    // Simple-Summed Stats\r\n    finalStats.critRate = this._sumStats(\"critRate\", baseStats, artifactsStats, miscStats);\r\n    finalStats.critDamage = this._sumStats(\"critDamage\", baseStats, artifactsStats, miscStats);\r\n    finalStats.elementalMastery = this._sumStats(\"elementalMastery\", baseStats, artifactsStats, miscStats);\r\n    finalStats.energyRecharge = this._sumStats(\"energyRecharge\", baseStats, artifactsStats, miscStats);\r\n    finalStats.healingBonus = this._sumStats(\"healingBonus\", baseStats, artifactsStats, miscStats);\r\n    finalStats.elementalBonus = this._sumStats(\"elementalBonus\", baseStats, artifactsStats, miscStats);\r\n\r\n    return this._roundStats(finalStats);\r\n  }\r\n\r\n  static _sumStats(type, ...stats) {\r\n    let total = 0;\r\n    stats.filter(statCollection => statCollection[type]).forEach(statCollection => total += statCollection[type]);\r\n    return total;\r\n  }\r\n\r\n  static _filledStats(statCollection) {\r\n    const filledStats = {};\r\n    Object.keys(stats).forEach(stat => {\r\n      if (statCollection[stat] == null) filledStats[stat] = 0;\r\n      else filledStats[stat] = statCollection[stat];\r\n    });\r\n    return filledStats;\r\n  }\r\n\r\n  static _roundStats(statCollection) {\r\n    const roundedStats = {};\r\n    const roundToMap = {\r\n      atk: 0,\r\n      def: 0,\r\n      hp: 0,\r\n      critRate: 1,\r\n      critDamage: 1,\r\n      elementalMastery: 0,\r\n      energyRecharge: 1,\r\n      healingBonus: 1,\r\n      elementalBonus: 1\r\n    };\r\n    Object.entries(statCollection).forEach(([stat, value]) => {\r\n      const decimalPlaces = roundToMap[stat];\r\n      roundedStats[stat] = MathUtils.roundToDecimals(value, decimalPlaces);\r\n    });\r\n    return roundedStats;\r\n  }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  FormGroup,\r\n  IconButton,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  TextField,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport ReactUtils from \"../utils/ReactUtils\";\r\n\r\nimport stats from \"../data/stats\";\r\n\r\nimport \"./StatsPanel.css\";\r\n\r\nconst StatsPanel = ({ defaultData, data, onData, readOnly, requiredStats = [], title }) => {\r\n  // Helpers\r\n  const statsListFromObj = statsObj => {\r\n    return Object.entries(statsObj).filter(([type, _]) => requiredStats.indexOf(type) === -1)\r\n                                   .map(([type, value]) => { return { type, value }; })\r\n  };\r\n\r\n  // State\r\n  let defaultAppliedStats = [];\r\n  requiredStats.forEach(requiredStatType => {\r\n    const existingIndex = defaultAppliedStats.findIndex(({ type }) => type === requiredStatType);\r\n    const defaultValue = defaultData[requiredStatType] != null ? defaultData[requiredStatType] : 0;\r\n    if (existingIndex === -1) defaultAppliedStats.push({ type: requiredStatType, value: defaultValue });\r\n  });\r\n  if (defaultData) {\r\n    defaultAppliedStats = [\r\n      ...defaultAppliedStats,\r\n      ...statsListFromObj(defaultData)\r\n    ];\r\n  }\r\n  const [appliedStats, setAppliedStats] = useState(defaultAppliedStats);\r\n  const [newStatType, setNewStatType] = useState(\"\");\r\n\r\n  // Effects\r\n  useEffect(() => {\r\n    const statsObj = {};\r\n    appliedStats.forEach(({ type, value }) => statsObj[type] = value);\r\n    if (onData) onData(statsObj);\r\n  }, [appliedStats, data]);\r\n\r\n  // Event Handlers\r\n  const onStatChange = (e, typeToUpdate) => {\r\n    const existingIndex = appliedStats.findIndex(({ type }) => type === typeToUpdate);\r\n    if (existingIndex === -1) return;\r\n    const updatedStat = { type: typeToUpdate, value: e.target.value === \"\" ? \"\" : Number(e.target.value) };\r\n    setAppliedStats([\r\n      ...appliedStats.slice(0, existingIndex),\r\n      updatedStat,\r\n      ...appliedStats.slice(existingIndex + 1)\r\n    ]);\r\n  };\r\n  const onStatDelete = typeToDelete => {\r\n    if (requiredStats.indexOf(typeToDelete) !== -1) return;\r\n    const existingIndex = appliedStats.findIndex(({ type }) => type === typeToDelete);\r\n    if (existingIndex === -1) return;\r\n    setAppliedStats([...appliedStats.slice(0, existingIndex), ...appliedStats.slice(existingIndex + 1)]);\r\n  };\r\n  const onNewStatTypeSelect = e => {\r\n    setNewStatType(e.target.value);\r\n  };\r\n  const onNewStatTypeAdd = () => {\r\n    if (!newStatType) {\r\n      return ReactUtils.onError(\"Please select a stat type to add.\");\r\n    } else if (appliedStats.find(({ type }) => type === newStatType) != null) {\r\n      return ReactUtils.onError(\"Stat type already exists.\");\r\n    }\r\n    setAppliedStats([...appliedStats, { type: newStatType, value: 0 }]);\r\n    setNewStatType(\"\");\r\n  };\r\n\r\n  // DOM Elements\r\n  const statsToUse = readOnly ? statsListFromObj(data) : appliedStats;\r\n  const statInputs = statsToUse.filter(({ type, value }) => value != null).map(({ type, value }) => {\r\n    const name = stats[type];\r\n    const canDeleteStat = requiredStats.indexOf(type) === -1;\r\n    const inputProps = { style: { textAlign: \"right\" } };\r\n    const typographyProps = readOnly ? { variant: \"h6\" } : {};\r\n    return (\r\n      <FormGroup key={type} row className=\"statRow\">\r\n        {\r\n          !readOnly &&\r\n          <IconButton aria-label=\"delete\" disabled={!canDeleteStat}\r\n                      onClick={() => onStatDelete(type)}><DeleteIcon/></IconButton>\r\n        }\r\n        <Typography className=\"statLabel\" {...typographyProps}>{name}</Typography>\r\n        {\r\n            <TextField id={`${type}Input`} className=\"statInput\" type=\"number\" inputProps={inputProps} value={value}\r\n                       readOnly={readOnly} disabled={readOnly} onChange={e => onStatChange(e, type)}/>\r\n        }\r\n      </FormGroup>\r\n    );\r\n  });\r\n  const statTypeItems = Object.entries(stats).filter(([typeToFind, _]) => {\r\n    return appliedStats.findIndex(({ type }) => type === typeToFind) === -1;\r\n  }).map(([type, name]) => {\r\n    return <MenuItem key={type} value={type}>{name}</MenuItem>;\r\n  });\r\n\r\n  return (\r\n    <Paper className={`statPanel formPanel ${readOnly ? \"readOnly\" : \"\"}`}>\r\n      <Typography variant=\"h5\">{title}</Typography>\r\n      <div className=\"appliedStats\">\r\n        {statInputs}\r\n      </div>\r\n      {\r\n        !readOnly &&\r\n        <FormGroup row className=\"newStatForm\">\r\n          <FormControl className=\"formSelect\">\r\n            <InputLabel id=\"newStatTypeLabel\">New Stat</InputLabel>\r\n            <Select id=\"newStatType\" labelId=\"newStatTypeLabel\" value={newStatType} onChange={onNewStatTypeSelect}>\r\n              {statTypeItems}\r\n            </Select>\r\n          </FormControl>\r\n          <Button variant=\"contained\" startIcon={<AddIcon/>} onClick={onNewStatTypeAdd}>\r\n            Add\r\n          </Button>\r\n        </FormGroup>\r\n      }\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default StatsPanel;\r\n","import React from \"react\";\r\nimport { GridList, GridListTile } from \"@material-ui/core\";\r\n\r\nimport StatsPanel from \"./StatsPanel\";\r\n\r\nconst ArtifactsTab = ({ flowerStats, onFlowerStats, featherStats, onFeatherStats, timepieceStats, onTimepieceStats,\r\n                        gobletStats, onGobletStats, hatStats, onHatStats, setEffectsStats, onSetEffectsStats }) => {\r\n  return (\r\n    <GridList cellHeight={400} spacing={10} cols={3}>\r\n      <GridListTile cols={1}>\r\n        <StatsPanel title=\"Flower\" defaultData={flowerStats} onData={onFlowerStats} requiredStats={[\"hp\"]}/>\r\n      </GridListTile>\r\n      <GridListTile cols={1}>\r\n        <StatsPanel title=\"Feather\" defaultData={featherStats} onData={onFeatherStats} requiredStats={[\"atk\"]}/>\r\n      </GridListTile>\r\n      <GridListTile cols={1}>\r\n        <StatsPanel title=\"Timepiece\" defaultData={timepieceStats} onData={onTimepieceStats}/>\r\n      </GridListTile>\r\n      <GridListTile cols={1}>\r\n        <StatsPanel title=\"Goblet\" defaultData={gobletStats} onData={onGobletStats}/>\r\n      </GridListTile>\r\n      <GridListTile cols={1}>\r\n        <StatsPanel title=\"Hat\" defaultData={hatStats} onData={onHatStats}/>\r\n      </GridListTile>\r\n      <GridListTile cols={1}>\r\n        <StatsPanel title=\"Set Effects\" defaultData={setEffectsStats} onData={onSetEffectsStats}/>\r\n      </GridListTile>\r\n    </GridList>\r\n  );\r\n};\r\n\r\nexport default ArtifactsTab;\r\n","export default class StringUtils {\r\n  static capitalize(str) {\r\n    if (!str) return str;\r\n    return `${str[0].toUpperCase()}${str.slice(1)}`;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { GridList, GridListTile } from \"@material-ui/core\";\r\n\r\nimport StatsPanel from \"./StatsPanel\";\r\n\r\nimport StringUtils from \"../utils/StringUtils\";\r\n\r\nconst BaseStatsTab = ({ character, baseCharacterStats, characterStats, onCharacterStats, weaponStats, onWeaponStats }) => {\r\n  const hasBaseCharStats = Boolean(character.baseCharacter);\r\n  const numCols = hasBaseCharStats ? 3 : 2;\r\n  let baseStatsTitle = \"Base Character Stats\";\r\n  if (hasBaseCharStats)\r\n  {\r\n    if (character.level) {\r\n      baseStatsTitle += ` (${StringUtils.capitalize(character.baseCharacter)}, Level ${character.level})`;\r\n    } else {\r\n      baseStatsTitle += ` (${StringUtils.capitalize(character.baseCharacter)}`;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <GridList cellHeight={500} spacing={10} cols={numCols}>\r\n      {\r\n        hasBaseCharStats &&\r\n        <GridListTile cols={1}>\r\n          <StatsPanel title={baseStatsTitle} data={baseCharacterStats} readOnly/>\r\n        </GridListTile>\r\n      }\r\n      <GridListTile cols={1}>\r\n        <StatsPanel title=\"Additional Base Stats\" defaultData={characterStats} onData={onCharacterStats}/>\r\n      </GridListTile>\r\n      <GridListTile cols={1}>\r\n        <StatsPanel title=\"Weapon\" defaultData={weaponStats} onData={onWeaponStats} requiredStats={[\"atk\"]}/>\r\n      </GridListTile>\r\n    </GridList>\r\n  );\r\n};\r\n\r\nexport default BaseStatsTab;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  FormGroup,\r\n  IconButton,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nimport ReactUtils from \"../utils/ReactUtils\";\r\n\r\nimport stats from \"../data/stats\";\r\n\r\nimport \"./SpecialStatsForm.css\";\r\n\r\nconst SpecialStatForm = ({ defaultSpecialStat = {}, isCreationForm, onAdd, onDelete, onUpdate }) => {\r\n  // Helpers\r\n  const isValid = () => {\r\n    return [finalStatType, percentChange, statGroup, statGroupType].indexOf(\"\") === -1;\r\n  };\r\n  const getCurrentSpecialStat = (useNewUniqueId) => {\r\n    let actualUniqueId = uniqueId;\r\n    if (useNewUniqueId) actualUniqueId = ReactUtils.nextUniqueId(\"specialStat\");\r\n    return { uniqueId: actualUniqueId, finalStatType, percentChange, statGroup, statGroupType };\r\n  };\r\n\r\n  // State\r\n  const [finalStatType, setFinalStatType] = useState(defaultSpecialStat.finalStatType || \"\");\r\n  const [percentChange, setPercentChange] = useState(defaultSpecialStat.percentChange || \"\");\r\n  const [statGroup, setStatGroup] = useState(defaultSpecialStat.statGroup || \"\");\r\n  const [statGroupType, setStatGroupType] = useState(defaultSpecialStat.statGroupType || \"\");\r\n  let defaultUniqueId = defaultSpecialStat.uniqueId;\r\n  if (defaultUniqueId == null || isCreationForm) defaultUniqueId = -1;\r\n  const [uniqueId, setUniqueId] = useState(defaultUniqueId);\r\n\r\n  // Effects\r\n  useEffect(() => {\r\n    if (isCreationForm) return;\r\n    const specialStat = getCurrentSpecialStat();\r\n    if (!isValid()) return ReactUtils.onError(\"Please make sure all values are entered and valid.\");\r\n    onUpdate(specialStat);\r\n  }, [finalStatType, percentChange, statGroup, statGroupType]);\r\n\r\n  // Event Handlers\r\n  const onFinalStatTypeSelect = e => {\r\n    setFinalStatType(e.target.value);\r\n  };\r\n  const onPercentChange = e => {\r\n    setPercentChange(e.target.value === \"\" ? \"\" : Number(e.target.value));\r\n  };\r\n  const onStatGroupSelect = e => {\r\n    setStatGroup(e.target.value);\r\n  };\r\n  const onStatGroupTypeSelect = e => {\r\n    setStatGroupType(e.target.value);\r\n  };\r\n  const onDeleteSpecialStat = () => {\r\n    const currentSpecialStat = getCurrentSpecialStat();\r\n    onDelete(currentSpecialStat);\r\n  };\r\n  const onNewSpecialStat = () => {\r\n    const newSpecialStat = getCurrentSpecialStat(true);\r\n    if (!isValid()) return ReactUtils.onError(\"Please make sure all values are entered and valid.\");\r\n    setFinalStatType(\"\");\r\n    setPercentChange(\"\");\r\n    setStatGroup(\"\");\r\n    setStatGroupType(\"\");\r\n    setUniqueId(-1);\r\n    onAdd(newSpecialStat);\r\n  };\r\n\r\n  // DOM Elements\r\n  const statTypeItems = Object.entries(stats).map(([type, name]) => {\r\n    return <MenuItem key={type} value={type}>{name}</MenuItem>;\r\n  });\r\n\r\n  return (\r\n    <FormGroup row className=\"newStatForm specialStatForm\">\r\n      {\r\n        !isCreationForm &&\r\n        <IconButton aria-label=\"delete\" onClick={onDeleteSpecialStat}><DeleteIcon/></IconButton>\r\n      }\r\n      <Typography>Increase</Typography>\r\n      <FormControl className=\"formSelect\">\r\n        <Select id=\"finalStatType\" value={finalStatType} onChange={onFinalStatTypeSelect}>\r\n          {statTypeItems}\r\n        </Select>\r\n      </FormControl>\r\n      <Typography>by</Typography>\r\n      <TextField id=\"percentChange\" type=\"number\" value={percentChange} onChange={onPercentChange}/>\r\n      <Typography>% of</Typography>\r\n      <FormControl className=\"formSelect\">\r\n        <Select id=\"statGroup\" value={statGroup} onChange={onStatGroupSelect}>\r\n          <MenuItem value=\"base\">Base</MenuItem>\r\n          <MenuItem value=\"artifact\">Artifact</MenuItem>\r\n          <MenuItem value=\"total\">Total</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className=\"formSelect\">\r\n        <Select id=\"statGroupType\" value={statGroupType} onChange={onStatGroupTypeSelect}>\r\n          {statTypeItems}\r\n        </Select>\r\n      </FormControl>\r\n      {\r\n        isCreationForm &&\r\n        <Button variant=\"contained\" startIcon={<AddIcon/>} onClick={onNewSpecialStat}>\r\n          Add\r\n        </Button>\r\n      }\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nexport default SpecialStatForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Paper, Typography} from \"@material-ui/core\";\r\n\r\nimport SpecialStatForm from \"./SpecialStatForm\";\r\n\r\nconst SpecialStatsPanel = ({ defaultSpecialStats, onSpecialStats }) => {\r\n  // State\r\n  const [specialStats, setSpecialStats] = useState(defaultSpecialStats);\r\n\r\n  // Effects\r\n  useEffect(() => {\r\n    if (onSpecialStats) onSpecialStats(specialStats);\r\n  }, [specialStats]);\r\n\r\n  // Event Handlers\r\n  const onDeleteSpecialStat = specialStat => {\r\n    const existingIndex = specialStats.findIndex(stat => specialStat.uniqueId === stat.uniqueId);\r\n    if (existingIndex === -1) return;\r\n    setSpecialStats([...specialStats.slice(0, existingIndex), ...specialStats.slice(existingIndex + 1)]);\r\n  };\r\n  const onUpdateSpecialStat = specialStat => {\r\n    const existingIndex = specialStats.findIndex(stat => specialStat.uniqueId === stat.uniqueId);\r\n    if (existingIndex === -1) return;\r\n    setSpecialStats([\r\n      ...specialStats.slice(0, existingIndex),\r\n      specialStat,\r\n      ...specialStats.slice(existingIndex + 1)\r\n    ]);\r\n  };\r\n  const onAddSpecialStat = specialStat => {\r\n    setSpecialStats([...specialStats, specialStat]);\r\n  };\r\n\r\n  // DOM Nodes\r\n  const statForms = specialStats.map(specialStat => {\r\n    return <SpecialStatForm key={specialStat.uniqueId} defaultSpecialStat={specialStat}\r\n                            onDelete={onDeleteSpecialStat} onUpdate={onUpdateSpecialStat}/>\r\n  });\r\n\r\n  return (\r\n    <Paper className=\"formPanel\">\r\n      <Typography variant=\"h5\">Special Stats (Coming Soon)</Typography>\r\n      <div className=\"appliedStats appliedSpecialStats\">\r\n        {statForms}\r\n      </div>\r\n      <SpecialStatForm isCreationForm onAdd={onAddSpecialStat}/>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default SpecialStatsPanel;\r\n","import React from \"react\";\r\nimport { GridList, GridListTile } from \"@material-ui/core\";\r\n\r\nimport StatsPanel from \"./StatsPanel\";\r\nimport SpecialStatsPanel from \"./SpecialStatsPanel\";\r\n\r\nconst BonusStatsTab = ({ miscStats, onMiscStats, specialStats, onSpecialStats }) => {\r\n  return (\r\n    <GridList cellHeight={300} spacing={10} cols={2}>\r\n      <GridListTile cols={1}>\r\n        <StatsPanel title=\"Miscellaneous Stats\" defaultData={miscStats} onData={onMiscStats}/>\r\n      </GridListTile>\r\n      <GridListTile cols={1}>\r\n        <SpecialStatsPanel defaultSpecialStats={specialStats} onSpecialStats={onSpecialStats}/>\r\n      </GridListTile>\r\n    </GridList>\r\n  );\r\n};\r\n\r\nexport default BonusStatsTab;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport characters from \"../data/characters\";\r\nimport weapons from \"../data/weapons\";\r\n\r\nimport StringUtils from \"../utils/StringUtils\";\r\n\r\nconst CharacterInfoPanel = ({ defaultData, onData }) => {\r\n  // State\r\n  const [baseCharacter, setBaseCharacter] = useState(defaultData.baseCharacter);\r\n  const [weaponType, setWeaponType] = useState(defaultData.weaponType);\r\n  const [level, setLevel] = useState(defaultData.level);\r\n\r\n  // Effects\r\n  useEffect(() => {\r\n    onData({ baseCharacter, level, weaponType });\r\n  }, [baseCharacter, weaponType, level]);\r\n\r\n  // Event Handlers\r\n  const onLevel = e => {\r\n    const level = e.target.value === \"\" ? \"\" : Number(e.target.value);\r\n    setLevel(level);\r\n  };\r\n  const onWeaponType = e => {\r\n    setWeaponType(e.target.value);\r\n  };\r\n  const onBaseCharacter = e => {\r\n    const charId = e.target.value;\r\n    const character = characters[charId];\r\n\r\n    setBaseCharacter(charId);\r\n    setWeaponType(character.weapon);\r\n\r\n    let maxLevel = 0;\r\n    const levels = Object.keys(characters[charId].baseStats);\r\n    const maxLevelWithStats = levels.reduce((a, b) => Math.max(a, b), -Infinity);\r\n    setLevel(maxLevelWithStats);\r\n  }\r\n\r\n  // DOM Elements\r\n  const baseCharacterItems = Object.entries(characters).map(([charId, charData]) => {\r\n    return <MenuItem key={charId} value={charId}>{charData.name}</MenuItem>;\r\n  });\r\n  const weaponTypeItems = Object.entries(weapons).map(([wepId, wepName]) => {\r\n    return <MenuItem key={wepId} value={wepId}>{StringUtils.capitalize(wepName)}</MenuItem>;\r\n  });\r\n\r\n  return (\r\n    <Paper className=\"formPanel\">\r\n      <Typography variant=\"h5\">Character Info</Typography>\r\n      <FormControl>\r\n        <InputLabel id=\"characterLabel\">Character</InputLabel>\r\n        <Select id=\"character\" labelId=\"characterLabel\" value={baseCharacter} onChange={onBaseCharacter}>\r\n          {baseCharacterItems}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl>\r\n        <InputLabel id=\"weaponTypeLabel\">Weapon</InputLabel>\r\n        <Select id=\"weaponType\" labelId=\"weaponTypeLabel\" value={weaponType} onChange={onWeaponType}>\r\n          {weaponTypeItems}\r\n        </Select>\r\n      </FormControl>\r\n      <TextField id=\"characterLevel\" label=\"Level\" type=\"number\" value={level} onChange={onLevel}/>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CharacterInfoPanel;\r\n","export default {\r\n  names: {\r\n    electroCharge: \"Electro-Charge\",\r\n    melt: \"Melt\",\r\n    overload: \"Overload\",\r\n    shatter: \"Shatter\",\r\n    superconduct: \"Superconduct\",\r\n    swirl: \"Swirl\",\r\n    vaporize: \"Vaporize\"\r\n  },\r\n  multipliers: {\r\n    electroCharge: 2.4,\r\n    melt: 0,\r\n    overload: 4.0,\r\n    shatter: 3.0,\r\n    superconduct: 1.0,\r\n    swirl: 1.2,\r\n    vaporize: 0\r\n  },\r\n  superconduct: [\r\n    8, 9, 9, 10, 11, 12, 12, 13, 16, 17, 18, 20, 22, 23, 27, 29, 31, 34, 37, 40, 42, 46, 48, 51, 53, 56, 59, 61, 64, 68,\r\n    71, 74, 77, 80, 84, 88, 91, 96, 99, 103, 107, 111, 117, 121, 128, 133, 140, 147, 154, 161, 168, 174, 182, 189, 199,\r\n    208, 217, 226, 236, 244, 254, 266, 278, 290, 303, 314, 326, 337, 348, 360, 371, 382, 391, 401, 414, 427, 438, 450,\r\n    461, 472, 483, 494, 507, 518, 532, 544, 557, 570, 586, 601\r\n  ]\r\n};\r\n","import MathUtils from \"./MathUtils\";\r\n\r\nimport embonus from \"../data/embonus\";\r\n\r\nexport default class DamageUtils {\r\n  static getDefaultErBonuses() {\r\n    const bonuses = {};\r\n    Object.keys(embonus.names).forEach(type => bonuses[type] = 0);\r\n    return bonuses;\r\n  }\r\n\r\n  static getEnemyDefense(enemyLevel) {\r\n    return MathUtils.roundToDecimals(5 * enemyLevel + 500, 0);\r\n  }\r\n\r\n  static getEnemyDefenseMultiplier(characterLevel = 0, enemyLevel = 0, defenseReduction = 0) {\r\n    let result;\r\n    if (defenseReduction > 0) {\r\n      result = Math.round((characterLevel + 100) / (characterLevel + enemyLevel + 200));\r\n    } else {\r\n      result = (characterLevel + 100) / ((1 - (defenseReduction / 100)) * (enemyLevel + 100) + characterLevel + 100);\r\n    }\r\n    return MathUtils.roundToDecimals(result, 2);\r\n  }\r\n\r\n  static getEnemyResistanceMultiplier(elementalRes = 0, elementalResReduction = 0) {\r\n    let result;\r\n    const netElementalRes = elementalRes - elementalResReduction;\r\n    if (netElementalRes < 0) {\r\n      result = 1 - ((netElementalRes / 100) / 2);\r\n    } else if (netElementalRes >= 0 && netElementalRes < 75) {\r\n      result = 1 - (netElementalRes / 100);\r\n    } else {\r\n      result = 1 / ((4 * netElementalRes / 100) + 1);\r\n    }\r\n    return MathUtils.roundToDecimals(result, 2);\r\n  }\r\n\r\n  static getTotalSkillDamage(skillDamage = 0, bonusDamage = 0, elementalBonus = 0, applyElementalBonus) {\r\n    const percentIncrease = bonusDamage + (applyElementalBonus ? elementalBonus : 0);\r\n    const result = MathUtils.percentIncrease(skillDamage, percentIncrease);\r\n    return MathUtils.roundToDecimals(result, 2);\r\n  }\r\n\r\n  static getBaseNonCritDamage(atk, totalSkillDamage, enemyDefenseMultiplier) {\r\n    const nonCrit = MathUtils.percentIncrease(atk, totalSkillDamage) * enemyDefenseMultiplier;\r\n    return MathUtils.roundToDecimals(nonCrit, 0);\r\n  }\r\n\r\n  static getBaseCritDamage(atk, totalSkillDamage, enemyDefenseMultiplier, critDamage) {\r\n    const nonCrit = MathUtils.percentIncrease(atk, totalSkillDamage);\r\n    const crit = MathUtils.percentIncrease(nonCrit, critDamage) * enemyDefenseMultiplier;\r\n    return MathUtils.roundToDecimals(crit, 0);\r\n  }\r\n\r\n  static getAverageDamage(nonCrit, crit, critRate) {\r\n    const weightedNonCrit =  (nonCrit * ((100 - critRate) / 100)) + (crit * (critRate / 100));\r\n    return MathUtils.roundToDecimals(weightedNonCrit, 0);\r\n  }\r\n\r\n  static getDamageTypes(element, weaponType, doesShatter) {\r\n    const typeMap = {\r\n      anemo: [\"swirl\"],\r\n      cryo: [\"melt\", \"superconduct\"],\r\n      dendro: [],\r\n      electro: [\"overload\", \"superconduct\", \"electroCharge\"],\r\n      geo: [\"shatter\"],\r\n      hydro: [\"vaporize\", \"electroCharge\"],\r\n      physical: [\"shatter\"],\r\n      pyro: [\"melt\", \"vaporize\", \"overload\"]\r\n    };\r\n    let result = typeMap[element] || [];\r\n    if (!result) result = [];\r\n    if ((weaponType === \"claymore\" || doesShatter) && result.indexOf(\"shatter\") === -1) result.push(\"shatter\");\r\n    return result.sort();\r\n  }\r\n\r\n  static getReactionMultiplier(type, activatingElement) {\r\n    if (type === \"melt\" || type === \"vaporize\") {\r\n      if (activatingElement === \"pyro\") return 2;\r\n      else return 1.5;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  static getElementalMasteryMultiplier(type, elementalMastery) {\r\n    let multiplier = 1;\r\n    if (type === \"vaporize\" || type === \"melt\") {\r\n      multiplier = 2.78;\r\n    } else if ([\"overload\", \"superconduct\", \"electroCharge\", \"shatter\", \"swirl\"].indexOf(type) !== -1) {\r\n      multiplier = 6.66;\r\n    }\r\n    const result = (multiplier * (elementalMastery / (1400 + elementalMastery))) * 100;\r\n    return MathUtils.roundToDecimals(result, 1);\r\n  }\r\n\r\n  static getElementalReactionDamage(type, baseDamage, characterLevel, reactionMult, elementalMasteryMult,\r\n                                    enemyResistanceMultiplier, elementalReactionMult = 0) {\r\n    if (type === \"vaporize\" || type === \"melt\") {\r\n      const amplifyingMult = MathUtils.percentIncrease(reactionMult, elementalMasteryMult + elementalReactionMult);\r\n      const scaledBaseDamage = baseDamage * amplifyingMult;\r\n      return MathUtils.roundToDecimals(scaledBaseDamage, 0);\r\n    } else {\r\n      const elementalDamage = this._getTransformativeReactionDamage(type, characterLevel);\r\n      const scaledBaseDamage = MathUtils.percentIncrease(elementalDamage, elementalMasteryMult);\r\n      let scaledElementalDamage = MathUtils.percentIncrease(scaledBaseDamage, elementalReactionMult);\r\n      return MathUtils.roundToDecimals(scaledElementalDamage * enemyResistanceMultiplier, 0);\r\n    }\r\n  }\r\n\r\n  static _getTransformativeReactionDamage(type, characterLevel) {\r\n    const baseDamage = embonus.superconduct[characterLevel - 1] || 0;\r\n    const scaledDamage = baseDamage * embonus.multipliers[type] || 0;\r\n    return MathUtils.roundToDecimals(scaledDamage, 0);\r\n  }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Divider,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport DamageUtils from \"../utils/DamageUtils\";\r\n\r\nconst EnemyInfoPanel = ({ defaultData, onData, character }) => {\r\n  // State\r\n  const [level, setLevel] = useState(defaultData.level);\r\n  const [elementalRes, setElementalRes] = useState(defaultData.elementalRes);\r\n  const [elementalResReduction, setElementalResReduction] = useState(defaultData.elementalResReduction);\r\n  const [defenseReduction, setDefenseReduction] = useState(defaultData.defenseReduction);\r\n  const [defense, setDefense] = useState(DamageUtils.getEnemyDefense(level));\r\n  const [defenseMult, setDefenseMult] = useState(DamageUtils.getEnemyDefenseMultiplier(character.level, level,\r\n                                                                                       defenseReduction));\r\n  const [resMult, setRestMult] = useState(DamageUtils.getEnemyResistanceMultiplier(elementalRes,\r\n                                                                                   elementalResReduction));\r\n\r\n  // Effects\r\n  useEffect(() => {\r\n    setDefense(DamageUtils.getEnemyDefense(level));\r\n  }, [level]);\r\n  useEffect(() => {\r\n    setDefenseMult(DamageUtils.getEnemyDefenseMultiplier(character.level, level, defenseReduction));\r\n  }, [character, level, defenseReduction]);\r\n  useEffect(() => {\r\n    setRestMult(DamageUtils.getEnemyResistanceMultiplier(elementalRes, elementalResReduction));\r\n  }, [elementalRes, elementalResReduction]);\r\n  useEffect(() => {\r\n    onData({ level, elementalRes, elementalResReduction, defenseReduction, defense, defenseMult, resMult });\r\n  }, [level, elementalRes, elementalResReduction, defenseReduction, defense, defenseMult, resMult]);\r\n\r\n  // Event Handlers\r\n  const onLevel = e => {\r\n    setLevel(e.target.value === \"\" ? \"\" : Number(e.target.value));\r\n  };\r\n  const onElementalRes = e => {\r\n    setElementalRes(e.target.value === \"\" ? \"\" : Number(e.target.value));\r\n  };\r\n  const onElementalResReduction = e => {\r\n    setElementalResReduction(e.target.value === \"\" ? \"\" : Number(e.target.value));\r\n  };\r\n  const onDefenseReduction = e => {\r\n    setDefenseReduction(e.target.value === \"\" ? \"\" : Number(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <Paper className=\"formPanel\">\r\n      <Typography variant=\"h5\">Enemy Info</Typography>\r\n      <TextField id=\"enemyLevel\" label=\"Level\" type=\"number\" value={level} onChange={onLevel}/>\r\n      <TextField id=\"elementalRes\" label=\"Elemental Resistance (%)\" type=\"number\" value={elementalRes} onChange={onElementalRes}/>\r\n      <TextField id=\"elementalResReduction\" label=\"Elemental Resistance Reduction (%)\" type=\"number\" value={elementalResReduction}\r\n                 onChange={onElementalResReduction}/>\r\n      <TextField id=\"defenseReduction\" label=\"Defense Reduction (%)\" type=\"number\" value={defenseReduction}\r\n                 onChange={onDefenseReduction}/>\r\n       <Divider className=\"panelDivider\"/>\r\n       <TextField readOnly disabled id=\"enemyDefense\" label=\"Defense\" type=\"number\" value={defense}/>\r\n      <TextField readOnly disabled id=\"enemyDefenseMult\" label=\"Defense Multiplier\" type=\"number\" value={defenseMult}/>\r\n      <TextField readOnly disabled id=\"enemyResMult\" label=\"Resistance Multiplier\" type=\"number\" value={resMult}/>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default EnemyInfoPanel;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Checkbox,\r\n  Divider,\r\n  FormControl,\r\n  FormControlLabel,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport elements from \"../data/elements\";\r\n\r\nimport DamageUtils from \"../utils/DamageUtils\";\r\nimport StringUtils from \"../utils/StringUtils\";\r\n\r\nconst SkillInfoPanel = ({ defaultData, onData, elementalBonus }) => {\r\n  // State\r\n  const [damage, setDamage] = useState(defaultData.damage);\r\n  const [bonusDamage, setBonusDamage] = useState(defaultData.bonusDamage);\r\n  const [element, setElement] = useState(defaultData.element);\r\n  const [doesShatter, setDoesShatter] = useState(defaultData.doesShatter);\r\n  const [doesApplyElementalBonus, setDoesApplyElementalBonus] = useState(defaultData.doesApplyElementalBonus);\r\n  const [totalDamage, setTotalDamage] = useState(DamageUtils.getTotalSkillDamage(damage, bonusDamage, elementalBonus,\r\n                                                                                 doesApplyElementalBonus));\r\n\r\n  // Effects\r\n  useEffect(() => {\r\n   setTotalDamage(DamageUtils.getTotalSkillDamage(damage, bonusDamage, elementalBonus, doesApplyElementalBonus));\r\n  }, [damage, bonusDamage, elementalBonus, doesApplyElementalBonus]);\r\n  useEffect(() => {\r\n    onData({ damage, bonusDamage, element, doesShatter, doesApplyElementalBonus, totalDamage });\r\n  }, [damage, bonusDamage, element, doesShatter, doesApplyElementalBonus, totalDamage]);\r\n\r\n  // Event Handlers\r\n  const onDamage = e => {\r\n    setDamage(e.target.value === \"\" ? \"\" : Number(e.target.value));\r\n  };\r\n  const onBonusDamage = e => {\r\n    setBonusDamage(e.target.value === \"\" ? \"\" : Number(e.target.value));\r\n  };\r\n  const onElement = e => {\r\n    setElement(e.target.value);\r\n  };\r\n  const onDoesShatter = e => {\r\n    setDoesShatter(e.target.checked);\r\n  };\r\n  const onDoesApplyElementalBonus = e => {\r\n    setDoesApplyElementalBonus(e.target.checked);\r\n  };\r\n\r\n  // DOM Elements\r\n  const elementItems = Object.values(elements).map(([elId, elName]) => {\r\n    return <MenuItem key={elId} value={elId}>{StringUtils.capitalize(elName)}</MenuItem>;\r\n  });\r\n  const doesShatterCheckbox = <Checkbox checked={doesShatter} onChange={onDoesShatter}/>;\r\n  const doesApplyElementalBonusCheckbox = <Checkbox checked={doesApplyElementalBonus}\r\n                                                    onChange={onDoesApplyElementalBonus}/>;\r\n\r\n  return (\r\n    <Paper className=\"formPanel\">\r\n      <Typography variant=\"h5\">Skill Info</Typography>\r\n      <TextField id=\"skillDamage\" label=\"Damage (%)\" type=\"number\" value={damage} onChange={onDamage}/>\r\n      <TextField id=\"bonusDamage\" label=\"Bonus Damage (%)\" type=\"number\" value={bonusDamage} onChange={onBonusDamage}/>\r\n      <FormControl>\r\n        <InputLabel id=\"elementLabel\">Element</InputLabel>\r\n        <Select id=\"element\" labelId=\"elementLabel\" value={element} onChange={onElement}>\r\n          {elementItems}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControlLabel control={doesShatterCheckbox} label=\"Damage Shatters\"/>\r\n      <FormControlLabel control={doesApplyElementalBonusCheckbox} label=\"Apply Elemental Bonus\"/>\r\n      <Divider className=\"panelDivider\"/>\r\n      <TextField readOnly disabled id=\"totalDamage\" label=\"Total Damage (%)\" type=\"number\" value={totalDamage}/>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default SkillInfoPanel;\r\n","import React from \"react\";\r\nimport { GridList, GridListTile } from \"@material-ui/core\";\r\n\r\nimport CharacterInfoPanel from \"./CharacterInfoPanel\";\r\nimport EnemyInfoPanel from \"./EnemyInfoPanel\";\r\nimport SkillInfoPanel from \"./SkillInfoPanel\";\r\n\r\nconst DamageInfoTab = ({ character, onCharacter, enemy, onEnemy, skill, onSkill, elementalBonus }) => {\r\n  return (\r\n    <GridList cellHeight={500} spacing={10} cols={3}>\r\n      <GridListTile cols={1}>\r\n        <CharacterInfoPanel defaultData={character} onData={onCharacter}/>\r\n      </GridListTile>\r\n      <GridListTile cols={1}>\r\n        <EnemyInfoPanel defaultData={enemy} onData={onEnemy} character={character}/>\r\n      </GridListTile>\r\n      <GridListTile cols={1}>\r\n        <SkillInfoPanel defaultData={skill} onData={onSkill} elementalBonus={elementalBonus}/>\r\n      </GridListTile>\r\n    </GridList>\r\n  );\r\n};\r\n\r\nexport default DamageInfoTab;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField\r\n} from \"@material-ui/core\";\r\n\r\nimport DamageUtils from \"../utils/DamageUtils\";\r\n\r\nimport embonus from \"../data/embonus\";\r\n\r\nimport \"./ExpectedDamageTab.css\";\r\n\r\nconst ExpectedDamageTab = ({ character, enemy, skill, finalStats, defaultErBonuses, onErBonuses }) => {\r\n  // State\r\n  const [erBonuses, setErBonuses] = useState(defaultErBonuses);\r\n\r\n  // Effects\r\n  useEffect(() => {\r\n    onErBonuses(erBonuses);\r\n  }, [erBonuses]);\r\n\r\n  // Event Handlers\r\n  const onErBonus = (e, type) => {\r\n    erBonuses[type] = e.target.value === \"\" ? \"\" : Number(e.target.value);\r\n    const newBonuses = Object.assign({}, erBonuses);\r\n    setErBonuses(newBonuses);\r\n  };\r\n\r\n  // DOM Nodes\r\n  const reactionTypes = DamageUtils.getDamageTypes(skill.element, character.weaponType, skill.doesShatter) || [];\r\n  const baseNonCrit = DamageUtils.getBaseNonCritDamage(finalStats.atk, skill.totalDamage, enemy.defenseMult);\r\n  const baseCrit = DamageUtils.getBaseCritDamage(finalStats.atk, skill.totalDamage, enemy.defenseMult,\r\n                                                 finalStats.critDamage);\r\n  const baseAverage = DamageUtils.getAverageDamage(baseNonCrit, baseCrit, finalStats.critRate);\r\n  const baseRow = (\r\n    <TableRow>\r\n      <TableCell component=\"th\" scope=\"row\">Base Damage</TableCell>\r\n      <TableCell>0</TableCell>\r\n      <TableCell>0</TableCell>\r\n      <TableCell>0</TableCell>\r\n      <TableCell>{baseNonCrit}</TableCell>\r\n      <TableCell>{baseCrit}</TableCell>\r\n      <TableCell>{baseAverage}</TableCell>\r\n    </TableRow>\r\n  );\r\n  const reactionRows = reactionTypes.map(type => {\r\n    const reactionMult = DamageUtils.getReactionMultiplier(type, skill.element);\r\n    const elementalMasteryMult = DamageUtils.getElementalMasteryMultiplier(type, finalStats.elementalMastery);\r\n    const elementalReactionMult = erBonuses[type] || 0;\r\n    const elementalNonCrit = DamageUtils.getElementalReactionDamage(type, baseNonCrit, character.level, reactionMult,\r\n                                                                    elementalMasteryMult, enemy.resMult,\r\n                                                                    elementalReactionMult);\r\n    const elementalCrit = DamageUtils.getElementalReactionDamage(type, baseCrit, character.level, reactionMult,\r\n                                                                 elementalMasteryMult, enemy.resMult,\r\n                                                                 elementalReactionMult);\r\n    const elementalAverage = DamageUtils.getAverageDamage(elementalNonCrit, elementalCrit, finalStats.critRate);\r\n    return (\r\n      <TableRow key={type}>\r\n        <TableCell component=\"th\" scope=\"row\">{embonus.names[type]}</TableCell>\r\n        <TableCell>{reactionMult * 100}</TableCell>\r\n        <TableCell>{elementalMasteryMult}</TableCell>\r\n        <TableCell>\r\n          <TextField id=\"erBonus\" type=\"number\" value={erBonuses[type]} onChange={e => onErBonus(e, type)}/>\r\n        </TableCell>\r\n        {\r\n          type === \"melt\" || type === \"vaporize\"\r\n            ?\r\n              <>\r\n                <TableCell>{elementalNonCrit}</TableCell>\r\n                <TableCell>{elementalCrit}</TableCell>\r\n                <TableCell>{elementalAverage}</TableCell>\r\n              </>\r\n            :\r\n              <TableCell colSpan={3}>{elementalNonCrit}</TableCell>\r\n        }\r\n      </TableRow>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <TableContainer className=\"expectedDamageTab\" component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Damage Type</TableCell>\r\n            <TableCell>Reaction Multiplier (%)</TableCell>\r\n            <TableCell>Elemental Mastery Multiplier (%)</TableCell>\r\n            <TableCell>Elemental Reaction Bonus (%)</TableCell>\r\n            <TableCell>Non-Crit</TableCell>\r\n            <TableCell>Crit</TableCell>\r\n            <TableCell>Average</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {baseRow}\r\n          {reactionRows}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default ExpectedDamageTab;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  TextField\r\n} from \"@material-ui/core\";\r\nimport CopyIcon from \"@material-ui/icons/AssignmentReturned\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\n\r\nimport ReactUtils from \"../utils/ReactUtils\";\r\n\r\nconst SaveDialog = ({ open, setOpen, saveData }) => {\r\n  // Helpers\r\n  const getShareableLink = (saveData) => {\r\n    const encodedData = btoa(JSON.stringify(saveData));\r\n    const { protocol, host, pathname } = window.location;\r\n    return `${protocol}//${host}${pathname}?data=${encodedData}`;\r\n  };\r\n\r\n  // State\r\n  const [isCopyingLink, setIsCopyingLink] = useState(false);\r\n  const saveDataText = JSON.stringify(saveData, null, 2);\r\n  const shareableLink = getShareableLink(saveData);\r\n\r\n  // Effects\r\n  useEffect(() => {\r\n    if (!isCopyingLink) return;\r\n    shareableLinkTextareaRef.current.select();\r\n    document.execCommand(\"copy\");\r\n    ReactUtils.onSuccess(\"Copied data to clipboard!\");\r\n    setIsCopyingLink(false);\r\n  }, [isCopyingLink]);\r\n\r\n  // Event Handlers\r\n  const onCopySaveData = e => {\r\n    saveDataTextareaRef.current.select();\r\n    document.execCommand(\"copy\");\r\n    e.target.focus();\r\n    ReactUtils.onSuccess(\"Copied data to clipboard!\");\r\n  };\r\n  const onCopyLink = () => {\r\n    setIsCopyingLink(true);\r\n  };\r\n\r\n  // DOM Elements\r\n  const saveDataTextareaRef = useRef(null);\r\n  const shareableLinkTextareaRef = useRef(null);\r\n  const shareableLinkStyle = isCopyingLink ? null : { display: \"none\" };\r\n\r\n  if (!open) return null;\r\n  return (\r\n    <>\r\n      <Dialog fullWidth open={open} onClose={() => setOpen(false)}>\r\n        <DialogTitle id=\"saveDataTitle\">Save Data</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Copy-paste the output below to load your artifacts into the app next time.\r\n          </DialogContentText>\r\n          <TextField readOnly fullWidth multiline id=\"saveData\" className=\"saveData\" label=\"Save Data\" margin=\"dense\"\r\n                     inputRef={saveDataTextareaRef} value={saveDataText}\r\n                     inputProps={{ style: { fontFamily: \"source-code-pro, monospace\" } }}/>\r\n           <TextField readOnly fullWidth id=\"link\" label=\"Link\" inputRef={shareableLinkTextareaRef}\r\n                      style={shareableLinkStyle} value={shareableLink}/>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button variant=\"contained\" startIcon={<CopyIcon/>} onClick={onCopySaveData}>Copy to Clipboard</Button>\r\n          <Button variant=\"contained\" startIcon={<LinkIcon/>} onClick={onCopyLink}>Copy Link to Clipboard</Button>\r\n          <Button variant=\"contained\" onClick={() => setOpen(false)}>Ok</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SaveDialog;\r\n","import React from \"react\";\r\nimport { GridList, GridListTile } from \"@material-ui/core\";\r\n\r\nimport StatsPanel from \"./StatsPanel\";\r\n\r\nconst TotalsTab = ({ baseStats, artifactsStats, finalStats }) => {\r\n  return (\r\n    <GridList cellHeight={500} spacing={10} cols={3}>\r\n      <GridListTile cols={1}>\r\n        <StatsPanel readOnly title=\"Base Stat Totals\" data={baseStats}/>\r\n      </GridListTile>\r\n      <GridListTile cols={1}>\r\n        <StatsPanel readOnly title=\"Artifact Totals\" data={artifactsStats}/>\r\n      </GridListTile>\r\n      <GridListTile cols={1}>\r\n        <StatsPanel readOnly title=\"Final Stats\" data={finalStats}/>\r\n      </GridListTile>\r\n    </GridList>\r\n  );\r\n};\r\n\r\nexport default TotalsTab;\r\n","import ReactGA from \"react-ga\";\r\n\r\nclass AnalyticsUtils {\r\n  constructor() {\r\n    try {\r\n      ReactGA.initialize(\"G-SZJNJJP2JP\");\r\n    } catch {\r\n      this._isDisabled = true;\r\n    }\r\n  }\r\n\r\n  logEvent(params) {\r\n    if (this._isDisabled) return;\r\n    ReactGA.event(params);\r\n  }\r\n\r\n}\r\n\r\nexport default new AnalyticsUtils();\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport characters from \"../data/characters\";\r\n\r\nimport ArtifactUtils from \"../utils/ArtifactUtils\";\r\nimport ArtifactsTab from \"./ArtifactsTab\";\r\nimport BaseStatsTab from \"./BaseStatsTab\";\r\nimport BonusStatsTab from \"./BonusStatsTab\";\r\nimport DamageInfoTab from \"./DamageInfoTab\";\r\nimport ExpectedDamageTab from \"./ExpectedDamageTab\";\r\nimport SaveDialog from \"../main/SaveDialog\";\r\nimport TotalsTab from \"./TotalsTab\";\r\n\r\nimport AnalyticsUtils from \"../utils/AnalyticsUtils\";\r\nimport DamageUtils from \"../utils/DamageUtils\";\r\n\r\nimport \"./Calculator.css\";\r\n\r\nconst getBaseCharacterStatsByLevel = ({ baseCharacter, level }) => {\r\n  let permanentBaseCharacterStats = {\r\n    critRate: 5,\r\n    critDamage: 50,\r\n    energyRecharge: 100\r\n  };\r\n\r\n  if (!baseCharacter || level === \"\") {\r\n    return permanentBaseCharacterStats;\r\n  }\r\n\r\n  if (characters[baseCharacter][level]) {\r\n    return ArtifactUtils.filterEmptyStats(\r\n      ArtifactUtils.addStats(permanentBaseCharacterStats, characters[baseCharacter][level])\r\n    );\r\n  }\r\n\r\n  // Find nearest matching level (floor) to provided\r\n  let baseCharacterStats = {};\r\n  if (level === 0) level = 1;\r\n  baseCharacterStats = {};\r\n  for (const [specifiedLevel, baseStats] of Object.entries(characters[baseCharacter].baseStats)) {\r\n    if (specifiedLevel <= level) {\r\n      baseCharacterStats = baseStats;\r\n    } else {\r\n      break;\r\n    }\r\n  }\r\n  return ArtifactUtils.filterEmptyStats(\r\n    ArtifactUtils.addStats(permanentBaseCharacterStats, baseCharacterStats)\r\n  );\r\n};\r\n\r\nconst Calculator = ({ data }) => {\r\n  // State\r\n  const [isSavePopupVisible, setIsSavePopupVisible] = useState(false);\r\n  const [saveData, setSaveData] = useState({});\r\n  const [tab, setTab] = useState(0);\r\n  const [character, setCharacter] = useState(data.character || {\r\n    baseCharacter: \"\",\r\n    weaponType: \"\",\r\n    level: \"\"\r\n  });\r\n  const [enemy, setEnemy] = useState(data.enemy || {\r\n    level: 83,\r\n    elementalRes: 10,\r\n    elementalResReduction: 0,\r\n    defenseReduction: 0\r\n  });\r\n  const [skill, setSkill] = useState(data.skill || {\r\n    damage: 0,\r\n    bonusDamage: 0,\r\n    element: \"\",\r\n    doesShatter: false,\r\n    doesApplyElementalBonus: true\r\n  });\r\n  const [characterStats, setCharacterStats] = useState(data.characterStats || {});\r\n  const [weaponStats, setWeaponStats] = useState(data.weaponStats || {});\r\n  const [setEffectsStats, setSetEffectsStats] = useState(data.setEffectsStats || {});\r\n  const [flowerStats, setFlowerStats] = useState(data.flowerStats || {\r\n    hp: 0\r\n  });\r\n  const [featherStats, setFeatherStats] = useState(data.featherStats || {\r\n    atk: 0\r\n  });\r\n  const [timepieceStats, setTimepieceStats] = useState(data.timepieceStats || {});\r\n  const [gobletStats, setGobletStats] = useState(data.gobletStats || {});\r\n  const [hatStats, setHatStats] = useState(data.hatStats || {});\r\n  const [miscStats, setMiscStats] = useState(data.miscStats || {});\r\n  const [specialStats, setSpecialStats] = useState(data.specialStats || []);\r\n  const [erBonuses, setErBonuses] = useState(data.erBonuses || DamageUtils.getDefaultErBonuses());\r\n  const [baseStats, setBaseStats] = useState({});\r\n  const [artifactsStats, setArtifactsStats] = useState({});\r\n  const [finalStats, setFinalStats] = useState({});\r\n\r\n  // Effects\r\n  useEffect(() => {\r\n    const baseCharacterStats = getBaseCharacterStatsByLevel(character);\r\n    setBaseStats(ArtifactUtils.addStats(baseCharacterStats, characterStats, weaponStats));\r\n    setArtifactsStats(ArtifactUtils.addStats(flowerStats, featherStats, timepieceStats, gobletStats, hatStats,\r\n                                             setEffectsStats));\r\n  }, [\r\n    character, characterStats, weaponStats, flowerStats, featherStats, timepieceStats, gobletStats, hatStats,\r\n    setEffectsStats, miscStats, specialStats\r\n  ]);\r\n  useEffect(() => {\r\n    setFinalStats(ArtifactUtils.getFinalStats(characterStats, weaponStats, baseStats, artifactsStats, miscStats,\r\n                                              specialStats));\r\n  }, [character, characterStats, weaponStats, baseStats, artifactsStats, miscStats, specialStats]);\r\n\r\n  // Event Handlers\r\n  const onSave = () => {\r\n    const saveData = {\r\n      character, skill, characterStats, weaponStats, setEffectsStats, flowerStats, featherStats,\r\n      timepieceStats, gobletStats, hatStats, miscStats, specialStats, erBonuses\r\n    };\r\n    setSaveData(saveData);\r\n    setIsSavePopupVisible(true);\r\n    AnalyticsUtils.logEvent({\r\n      category: \"User\",\r\n      action: \"Save\",\r\n      label: btoa(JSON.stringify(saveData, null, 2))\r\n    });\r\n  };\r\n  const onTab = (e, value) => {\r\n    AnalyticsUtils.logEvent({\r\n      category: \"Navigation\",\r\n      action: \"Tab Switch\",\r\n      label: tabNames[value]\r\n    });\r\n    setTab(value);\r\n  };\r\n\r\n  // DOM Nodes\r\n  const tabNames = [\"Damage Info\", \"Base Stats\", \"Artifacts\", \"Bonuses\", \"Totals\", \"Damage\"];\r\n  const tabs = tabNames.map(name => <Tab key={name} label={name}/>);\r\n  const tabPanels = [\r\n    <DamageInfoTab key=\"damage\" character={character} onCharacter={setCharacter} enemy={enemy} onEnemy={setEnemy}\r\n                   skill={skill} onSkill={setSkill} elementalBonus={finalStats.elementalBonus}/>,\r\n    <BaseStatsTab key=\"baseStats\" character={character} baseCharacterStats={getBaseCharacterStatsByLevel(character)}\r\n                  characterStats={characterStats} onCharacterStats={setCharacterStats}\r\n                  weaponStats={weaponStats} onWeaponStats={setWeaponStats}/>,\r\n    <ArtifactsTab key=\"artifacts\" flowerStats={flowerStats} onFlowerStats={setFlowerStats} featherStats={featherStats}\r\n                  onFeatherStats={setFeatherStats} timepieceStats={timepieceStats}\r\n                  onTimepieceStats={setTimepieceStats} gobletStats={gobletStats} onGobletStats={setGobletStats}\r\n                  hatStats={hatStats} onHatStats={setHatStats} setEffectsStats={setEffectsStats}\r\n                  onSetEffectsStats={setSetEffectsStats}/>,\r\n    <BonusStatsTab key=\"bonusStats\" miscStats={miscStats} onMiscStats={setMiscStats} specialStats={specialStats}\r\n                   onSpecialStats={setSpecialStats}/>,\r\n    <TotalsTab key=\"totals\" baseStats={baseStats} artifactsStats={artifactsStats} finalStats={finalStats}/>,\r\n    <ExpectedDamageTab character={character} enemy={enemy} skill={skill} finalStats={finalStats}\r\n                       defaultErBonuses={erBonuses} onErBonuses={setErBonuses}/>\r\n  ];\r\n\r\n  return (\r\n    <div className=\"calculator\">\r\n      <header>\r\n        <div className=\"headerLeft\">\r\n          <Typography variant=\"h4\" gutterBottom>Genshin Impact Damage Calculator</Typography>\r\n          <div className=\"headerActions\">\r\n            <Button variant=\"contained\" onClick={onSave}>Save</Button>\r\n          </div>\r\n        </div>\r\n        <Tabs variant=\"scrollable\" scrollButtons=\"auto\" value={tab} onChange={onTab}>\r\n          {tabs}\r\n        </Tabs>\r\n      </header>\r\n      <div className=\"tabContent\">\r\n        {tabPanels[tab]}\r\n      </div>\r\n      <SaveDialog open={isSavePopupVisible} setOpen={setIsSavePopupVisible} saveData={saveData}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  TextField\r\n} from \"@material-ui/core\";\r\n\r\nimport AnalyticsUtils from \"../utils/AnalyticsUtils\";\r\n\r\nconst LoadDialog = ({ open, setOpen, onSaveDataSubmit }) => {\r\n  // State\r\n  const [error, setError] = useState(\"\");\r\n  const [saveDataText, setSaveDataText] = useState(\"\");\r\n\r\n  // Effects\r\n  useEffect(() => {\r\n    setError(\"\");\r\n  }, [saveDataText]);\r\n\r\n  // Event Handlers\r\n  const processSaveData = () => {\r\n    try {\r\n      const saveData = JSON.parse(saveDataText);\r\n      setOpen(false);\r\n      onSaveDataSubmit(saveData);\r\n      AnalyticsUtils.logEvent({\r\n        category: \"User\",\r\n        action: \"Load\",\r\n        label: btoa(JSON.stringify(saveData, null, 2))\r\n      });\r\n    } catch {\r\n      setError(\"Could not parse save data, please check that it is correctly formatted.\");\r\n    }\r\n  };\r\n  const submitOnEnter = e => {\r\n    if (e.key !== \"Enter\") return;\r\n    e.preventDefault();\r\n    processSaveData();\r\n  };\r\n\r\n  return (\r\n    <Dialog fullWidth open={open} onClose={() => setOpen(false)}>\r\n      <DialogTitle id=\"saveDataTitle\">Load Save Data</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          If you have save data from previously using the app, copy-paste it below.\r\n        </DialogContentText>\r\n        <TextField autoFocus fullWidth multiline id=\"saveData\" label=\"Save Data\" margin=\"dense\"\r\n                   onChange={e => setSaveDataText(e.target.value)} onKeyDown={submitOnEnter}/>\r\n        {error && <DialogContentText color=\"error\">{error}</DialogContentText>}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => setOpen(false)}>Cancel</Button>\r\n        <Button onClick={processSaveData}>Load</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default LoadDialog;\r\n","import React, { useState } from \"react\";\r\nimport  {\r\n  Button,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport \"./Welcome.css\";\r\nimport LoadDialog from \"./LoadDialog\";\r\n\r\nconst Welcome = ({ loadApp }) => {\r\n  // State\r\n  const [isPopupVisible, setIsPopupVisible] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"welcome\">\r\n        <Typography variant=\"h2\" gutterBottom>Genshin Impact Damage Calculator</Typography>\r\n        <div className=\"actionButtons\">\r\n          <Button variant=\"contained\" color=\"primary\" onClick={() => setIsPopupVisible(true)}>Load Save</Button>\r\n          <Button variant=\"contained\" onClick={loadApp}>Get Started</Button>\r\n        </div>\r\n      </div>\r\n      <LoadDialog open={isPopupVisible} setOpen={setIsPopupVisible} onSaveDataSubmit={loadApp}/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  createMuiTheme,\r\n  CssBaseline,\r\n  Link, Snackbar,\r\n  ThemeProvider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport ReactUtils from \"./utils/ReactUtils\";\r\n\r\nimport Calculator from \"./calculator/Calculator\";\r\nimport Welcome from \"./main/Welcome\";\r\n\r\nimport \"./App.css\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst App = () => {\r\n  // State\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [saveData, setSaveData] = useState({});\r\n  const [isSuccessOpen, setIsSuccessOpen] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [isErrorOpen, setIsErrorOpen] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  // Hooks\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const query = new URLSearchParams(location.search);\r\n\r\n  // Effects\r\n  useEffect(() => {\r\n    ReactUtils.registerSuccessHandler(onSuccess);\r\n    ReactUtils.registerErrorHandler(onError);\r\n\r\n    if (query.has(\"data\")) {\r\n      try {\r\n        const saveDataFromUrl = JSON.parse(atob(query.get(\"data\")));\r\n        loadApp(saveDataFromUrl);\r\n      } catch {\r\n        ReactUtils.onError(\"There was a problem loading the data from the URL.\");\r\n      }\r\n      query.delete(\"data\");\r\n      history.push(\"\");\r\n    }\r\n  }, []);\r\n\r\n  // Theme\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        palette: {\r\n          type: \"dark\",\r\n        },\r\n      })\r\n  );\r\n\r\n  // Event Handlers\r\n  const onSuccess = message => {\r\n    setSuccessMessage(message);\r\n    setIsSuccessOpen(true);\r\n  };\r\n  const onError = message => {\r\n    setErrorMessage(message);\r\n    setIsErrorOpen(true);\r\n  };\r\n  const loadApp = loadedSaveData => {\r\n    setSaveData(Object.assign(saveData, loadedSaveData));\r\n    setIsLoaded(true);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline/>\r\n      <div className=\"app\">\r\n        {\r\n          !isLoaded\r\n            ? <Welcome loadApp={loadApp}/>\r\n            : <Calculator data={saveData}/>\r\n        }\r\n        <div className=\"credits\">\r\n          <Typography>\r\n            View on <Link href=\"https://github.com/knazir/genshin-calc\" target=\"_blank\">GitHub</Link>\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n      <Snackbar open={isSuccessOpen} autoHideDuration={3000} onClose={() => setIsSuccessOpen(false)}>\r\n        <Alert onClose={() => setIsSuccessOpen(false)} severity=\"success\">\r\n          {successMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar open={isErrorOpen} autoHideDuration={3000} onClose={() => setIsErrorOpen(false)}>\r\n        <Alert onClose={() => setIsErrorOpen(false)} severity=\"error\">\r\n          {errorMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nif (module.hot) {\r\n  module.hot.accept();\r\n}\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App/>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}