{"version":3,"sources":["utils/ReactUtils.js","utils/MathUtils.js","utils/ArtifactUtils.js","calculator/StatsPanel.jsx","calculator/ArtifactsTab.jsx","calculator/BaseStatsTab.jsx","calculator/SpecialStatForm.jsx","calculator/SpecialStatsPanel.jsx","calculator/BonusStatsTab.jsx","utils/StringUtils.js","calculator/CharacterInfoPanel.jsx","utils/DamageUtils.js","calculator/EnemyInfoPanel.jsx","calculator/SkillInfoPanel.jsx","calculator/DamageInfoTab.jsx","calculator/ExpectedDamageTab.jsx","main/SaveDialog.jsx","calculator/TotalsTab.jsx","utils/AnalyticsUtils.js","calculator/Calculator.jsx","main/LoadDialog.jsx","main/Welcome.jsx","App.jsx","index.jsx"],"names":["this","_successHandler","_errorHandler","_uniqueIds","key","id","successHandler","errorHandler","message","MathUtils","value","decimalPlaces","multiplier","i","Math","round","percentage","ArtifactUtils","totalStats","_filledStats","artifacts","forEach","artifact","Object","entries","statType","statValue","_roundStats","characterStats","weaponStats","baseStats","artifactsStats","miscStats","specialStats","finalStats","atkPercent","_sumStats","scaledAtk","percentIncrease","atk","ceil","defPercent","scaledDef","def","hpPercent","scaledHp","hp","critRate","critDamage","elementalMastery","energyRecharge","healingBonus","elementalBonus","type","total","stats","filter","statCollection","filledStats","keys","stat","roundedStats","roundToMap","roundToDecimals","StatsPanel","defaultData","data","onData","readOnly","requiredStats","title","statsListFromObj","statsObj","indexOf","map","defaultAppliedStats","requiredStatType","existingIndex","findIndex","defaultValue","push","useState","appliedStats","setAppliedStats","newStatType","setNewStatType","useEffect","statInputs","name","canDeleteStat","typographyProps","variant","FormGroup","row","className","IconButton","aria-label","disabled","onClick","typeToDelete","slice","onStatDelete","Typography","TextField","inputProps","style","textAlign","onChange","e","typeToUpdate","updatedStat","target","Number","onStatChange","statTypeItems","typeToFind","MenuItem","Paper","FormControl","InputLabel","Select","labelId","Button","startIcon","find","ReactUtils","onError","ArtifactsTab","flowerStats","onFlowerStats","featherStats","onFeatherStats","timepieceStats","onTimepieceStats","gobletStats","onGobletStats","hatStats","onHatStats","setEffectsStats","onSetEffectsStats","GridList","cellHeight","spacing","cols","GridListTile","BaseStatsTab","onCharacterStats","onWeaponStats","SpecialStatForm","defaultSpecialStat","isCreationForm","onAdd","onDelete","onUpdate","isValid","finalStatType","percentChange","statGroup","statGroupType","getCurrentSpecialStat","useNewUniqueId","actualUniqueId","uniqueId","nextUniqueId","setFinalStatType","setPercentChange","setStatGroup","setStatGroupType","defaultUniqueId","setUniqueId","specialStat","currentSpecialStat","newSpecialStat","SpecialStatsPanel","defaultSpecialStats","onSpecialStats","setSpecialStats","onDeleteSpecialStat","onUpdateSpecialStat","statForms","BonusStatsTab","onMiscStats","StringUtils","str","toUpperCase","CharacterInfoPanel","level","setLevel","weaponType","setWeaponType","weaponTypeItems","weapons","capitalize","label","DamageUtils","bonuses","embonus","names","enemyLevel","result","characterLevel","defenseReduction","elementalRes","elementalResReduction","netElementalRes","skillDamage","bonusDamage","applyElementalBonus","totalSkillDamage","enemyDefenseMultiplier","nonCrit","crit","weightedNonCrit","element","doesShatter","anemo","cryo","dendro","electro","geo","hydro","physical","pyro","sort","activatingElement","baseDamage","reactionMult","elementalMasteryMult","enemyResistanceMultiplier","elementalReactionMult","amplifyingMult","scaledBaseDamage","elementalDamage","_getTransformativeReactionDamage","scaledElementalDamage","scaledDamage","superconduct","multipliers","EnemyInfoPanel","character","setElementalRes","setElementalResReduction","setDefenseReduction","getEnemyDefense","defense","setDefense","getEnemyDefenseMultiplier","defenseMult","setDefenseMult","getEnemyResistanceMultiplier","resMult","setRestMult","Divider","SkillInfoPanel","damage","setDamage","setBonusDamage","setElement","setDoesShatter","doesApplyElementalBonus","setDoesApplyElementalBonus","getTotalSkillDamage","totalDamage","setTotalDamage","elementItems","elements","doesShatterCheckbox","Checkbox","checked","doesApplyElementalBonusCheckbox","FormControlLabel","control","DamageInfoTab","onCharacter","enemy","onEnemy","skill","onSkill","ExpectedDamageTab","defaultErBonuses","onErBonuses","erBonuses","setErBonuses","reactionTypes","getDamageTypes","baseNonCrit","getBaseNonCritDamage","baseCrit","getBaseCritDamage","baseAverage","getAverageDamage","baseRow","TableRow","TableCell","component","scope","reactionRows","getReactionMultiplier","getElementalMasteryMultiplier","elementalNonCrit","getElementalReactionDamage","elementalCrit","elementalAverage","newBonuses","assign","onErBonus","colSpan","TableContainer","Table","TableHead","TableBody","SaveDialog","open","setOpen","saveData","isCopyingLink","setIsCopyingLink","saveDataText","JSON","stringify","shareableLink","encodedData","btoa","window","location","protocol","host","pathname","getShareableLink","shareableLinkTextareaRef","current","select","document","execCommand","onSuccess","saveDataTextareaRef","useRef","shareableLinkStyle","display","Dialog","fullWidth","onClose","DialogTitle","DialogContent","DialogContentText","multiline","margin","inputRef","fontFamily","DialogActions","focus","TotalsTab","ReactGA","initialize","_isDisabled","params","event","Calculator","isSavePopupVisible","setIsSavePopupVisible","setSaveData","tab","setTab","setCharacter","setEnemy","setSkill","setCharacterStats","setWeaponStats","setSetEffectsStats","setFlowerStats","setFeatherStats","setTimepieceStats","setGobletStats","setHatStats","setMiscStats","getDefaultErBonuses","setBaseStats","setArtifactsStats","setFinalStats","addStats","getFinalStats","tabNames","tabs","Tab","tabPanels","gutterBottom","AnalyticsUtils","logEvent","category","action","Tabs","scrollButtons","LoadDialog","onSaveDataSubmit","error","setError","setSaveDataText","processSaveData","parse","autoFocus","onKeyDown","preventDefault","color","Welcome","loadApp","isPopupVisible","setIsPopupVisible","App","isLoaded","setIsLoaded","isSuccessOpen","setIsSuccessOpen","successMessage","setSuccessMessage","isErrorOpen","setIsErrorOpen","errorMessage","setErrorMessage","useLocation","history","useHistory","query","URLSearchParams","search","registerSuccessHandler","registerErrorHandler","has","saveDataFromUrl","atob","get","delete","theme","React","useMemo","createMuiTheme","palette","loadedSaveData","ThemeProvider","CssBaseline","Link","href","Snackbar","autoHideDuration","Alert","severity","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ad920e83.chunk.js","sourcesContent":["class ReactUtils {\n  constructor() {\n    this._successHandler = null;\n    this._errorHandler = null;\n    this._uniqueIds = {};\n  }\n\n  nextUniqueId(key) {\n    if (!this._uniqueIds[key]) this._uniqueIds[key] = 1;\n    const id = this._uniqueIds[key];\n    this._uniqueIds[key]++;\n    return `${key}_${id}`;\n  }\n\n  registerSuccessHandler(successHandler) {\n    this._successHandler = successHandler;\n  }\n\n  registerErrorHandler(errorHandler) {\n    this._errorHandler = errorHandler;\n  }\n\n  onSuccess(message) {\n    if (this._successHandler) this._successHandler(message);\n  }\n\n  onError(message) {\n    if (this._errorHandler) this._errorHandler(message);\n  }\n}\n\nexport default new ReactUtils();\n","export default class MathUtils {\n  static roundToDecimals(value, decimalPlaces) {\n    let multiplier = 1;\n    for (let i = 0; i < decimalPlaces; i++) {\n      multiplier *= 10;\n    }\n    return Math.round(value * multiplier) / multiplier;\n  }\n\n  static percentIncrease(value, percentage) {\n    return value * (1 + (percentage / 100));\n  }\n}\n","import MathUtils from \"./MathUtils\";\n\nimport stats from \"../data/stats\";\n\nexport default class ArtifactUtils {\n  static addStats(...artifacts) {\n    const totalStats = this._filledStats({});\n    artifacts.forEach(artifact => {\n      Object.entries(artifact).forEach(([statType, statValue]) => {\n        totalStats[statType] = totalStats[statType] == null ? statValue : totalStats[statType] + statValue;\n      });\n    });\n    return this._roundStats(totalStats);\n  }\n\n  static getFinalStats(characterStats, weaponStats, baseStats, artifactsStats, miscStats, specialStats) {\n    characterStats = this._filledStats(characterStats);\n    weaponStats = this._filledStats(weaponStats);\n    baseStats = this._filledStats(baseStats);\n    artifactsStats = this._filledStats(artifactsStats);\n    miscStats = this._filledStats(miscStats);\n    const finalStats = {};\n\n    // ATK\n    const atkPercent = this._sumStats(\"atkPercent\", baseStats, artifactsStats, miscStats);\n    const scaledAtk = MathUtils.percentIncrease(baseStats.atk, atkPercent);\n    finalStats.atk = Math.ceil(scaledAtk + artifactsStats.atk + miscStats.atk);\n\n    // DEF\n    const defPercent = this._sumStats(\"defPercent\", baseStats, artifactsStats, miscStats);\n    const scaledDef = MathUtils.percentIncrease(characterStats.def, defPercent);\n    finalStats.def = Math.ceil(scaledDef + weaponStats.def + artifactsStats.def + miscStats.def);\n\n    // HP\n    const hpPercent = this._sumStats(\"hpPercent\", baseStats, artifactsStats, miscStats);\n    const scaledHp = MathUtils.percentIncrease(characterStats.hp, hpPercent);\n    finalStats.hp = Math.ceil(scaledHp + weaponStats.hp + artifactsStats.hp + miscStats.hp);\n\n    // Simple-Summed Stats\n    finalStats.critRate = this._sumStats(\"critRate\", baseStats, artifactsStats, miscStats);\n    finalStats.critDamage = this._sumStats(\"critDamage\", baseStats, artifactsStats, miscStats);\n    finalStats.elementalMastery = this._sumStats(\"elementalMastery\", baseStats, artifactsStats, miscStats);\n    finalStats.energyRecharge = this._sumStats(\"energyRecharge\", baseStats, artifactsStats, miscStats);\n    finalStats.healingBonus = this._sumStats(\"healingBonus\", baseStats, artifactsStats, miscStats);\n    finalStats.elementalBonus = this._sumStats(\"elementalBonus\", baseStats, artifactsStats, miscStats);\n\n    return this._roundStats(finalStats);\n  }\n\n  static _sumStats(type, ...stats) {\n    let total = 0;\n    stats.filter(statCollection => statCollection[type]).forEach(statCollection => total += statCollection[type]);\n    return total;\n  }\n\n  static _filledStats(statCollection) {\n    const filledStats = {};\n    Object.keys(stats).forEach(stat => {\n      if (statCollection[stat] == null) filledStats[stat] = 0;\n      else filledStats[stat] = statCollection[stat];\n    });\n    return filledStats;\n  }\n\n  static _roundStats(statCollection) {\n    const roundedStats = {};\n    const roundToMap = {\n      atk: 0,\n      def: 0,\n      hp: 0,\n      critRate: 1,\n      critDamage: 1,\n      elementalMastery: 0,\n      energyRecharge: 1,\n      healingBonus: 1,\n      elementalBonus: 1\n    };\n    Object.entries(statCollection).forEach(([stat, value]) => {\n      const decimalPlaces = roundToMap[stat];\n      roundedStats[stat] = MathUtils.roundToDecimals(value, decimalPlaces);\n    });\n    return roundedStats;\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  FormControl,\n  FormGroup,\n  IconButton,\n  InputLabel,\n  MenuItem,\n  Paper,\n  Select,\n  TextField,\n  Typography\n} from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport ReactUtils from \"../utils/ReactUtils\";\n\nimport stats from \"../data/stats\";\n\nimport \"./StatsPanel.css\";\n\nconst StatsPanel = ({ defaultData, data, onData, readOnly, requiredStats = [], title }) => {\n  // Helpers\n  const statsListFromObj = statsObj => {\n    return Object.entries(statsObj).filter(([type, _]) => requiredStats.indexOf(type) === -1)\n                                   .map(([type, value]) => { return { type, value }; })\n  };\n\n  // State\n  let defaultAppliedStats = [];\n  requiredStats.forEach(requiredStatType => {\n    const existingIndex = defaultAppliedStats.findIndex(({ type }) => type === requiredStatType);\n    const defaultValue = defaultData[requiredStatType] != null ? defaultData[requiredStatType] : 0;\n    if (existingIndex === -1) defaultAppliedStats.push({ type: requiredStatType, value: defaultValue });\n  });\n  if (defaultData) {\n    defaultAppliedStats = [\n      ...defaultAppliedStats,\n      ...statsListFromObj(defaultData)\n    ];\n  }\n  const [appliedStats, setAppliedStats] = useState(defaultAppliedStats);\n  const [newStatType, setNewStatType] = useState(\"\");\n\n  // Effects\n  useEffect(() => {\n    const statsObj = {};\n    appliedStats.forEach(({ type, value }) => statsObj[type] = value);\n    if (onData) onData(statsObj);\n  }, [appliedStats, data]);\n\n  // Event Handlers\n  const onStatChange = (e, typeToUpdate) => {\n    const existingIndex = appliedStats.findIndex(({ type }) => type === typeToUpdate);\n    if (existingIndex === -1) return;\n    const updatedStat = { type: typeToUpdate, value: e.target.value === \"\" ? \"\" : Number(e.target.value) };\n    setAppliedStats([\n      ...appliedStats.slice(0, existingIndex),\n      updatedStat,\n      ...appliedStats.slice(existingIndex + 1)\n    ]);\n  };\n  const onStatDelete = typeToDelete => {\n    if (requiredStats.indexOf(typeToDelete) !== -1) return;\n    const existingIndex = appliedStats.findIndex(({ type }) => type === typeToDelete);\n    if (existingIndex === -1) return;\n    setAppliedStats([...appliedStats.slice(0, existingIndex), ...appliedStats.slice(existingIndex + 1)]);\n  };\n  const onNewStatTypeSelect = e => {\n    setNewStatType(e.target.value);\n  };\n  const onNewStatTypeAdd = () => {\n    if (!newStatType) {\n      return ReactUtils.onError(\"Please select a stat type to add.\");\n    } else if (appliedStats.find(({ type }) => type === newStatType) != null) {\n      return ReactUtils.onError(\"Stat type already exists.\");\n    }\n    setAppliedStats([...appliedStats, { type: newStatType, value: 0 }]);\n    setNewStatType(\"\");\n  };\n\n  // DOM Elements\n  const statsToUse = readOnly ? statsListFromObj(data) : appliedStats;\n  const statInputs = statsToUse.filter(({ type, value }) => value != null).map(({ type, value }) => {\n    const name = stats[type];\n    const canDeleteStat = requiredStats.indexOf(type) === -1;\n    const inputProps = { style: { textAlign: \"right\" } };\n    const typographyProps = readOnly ? { variant: \"h6\" } : {};\n    return (\n      <FormGroup key={type} row className=\"statRow\">\n        {\n          !readOnly &&\n          <IconButton aria-label=\"delete\" disabled={!canDeleteStat}\n                      onClick={() => onStatDelete(type)}><DeleteIcon/></IconButton>\n        }\n        <Typography className=\"statLabel\" {...typographyProps}>{name}</Typography>\n        {\n            <TextField id={`${type}Input`} className=\"statInput\" type=\"number\" inputProps={inputProps} value={value}\n                       readOnly={readOnly} disabled={readOnly} onChange={e => onStatChange(e, type)}/>\n        }\n      </FormGroup>\n    );\n  });\n  const statTypeItems = Object.entries(stats).filter(([typeToFind, _]) => {\n    return appliedStats.findIndex(({ type }) => type === typeToFind) === -1;\n  }).map(([type, name]) => {\n    return <MenuItem key={type} value={type}>{name}</MenuItem>;\n  });\n\n  return (\n    <Paper className={`statPanel formPanel ${readOnly ? \"readOnly\" : \"\"}`}>\n      <Typography variant=\"h5\">{title}</Typography>\n      <div className=\"appliedStats\">\n        {statInputs}\n      </div>\n      {\n        !readOnly &&\n        <FormGroup row className=\"newStatForm\">\n          <FormControl className=\"formSelect\">\n            <InputLabel id=\"newStatTypeLabel\">New Stat</InputLabel>\n            <Select id=\"newStatType\" labelId=\"newStatTypeLabel\" value={newStatType} onChange={onNewStatTypeSelect}>\n              {statTypeItems}\n            </Select>\n          </FormControl>\n          <Button variant=\"contained\" startIcon={<AddIcon/>} onClick={onNewStatTypeAdd}>\n            Add\n          </Button>\n        </FormGroup>\n      }\n    </Paper>\n  );\n};\n\nexport default StatsPanel;\n","import React from \"react\";\nimport { GridList, GridListTile } from \"@material-ui/core\";\n\nimport StatsPanel from \"./StatsPanel\";\n\nconst ArtifactsTab = ({ flowerStats, onFlowerStats, featherStats, onFeatherStats, timepieceStats, onTimepieceStats,\n                        gobletStats, onGobletStats, hatStats, onHatStats, setEffectsStats, onSetEffectsStats }) => {\n  return (\n    <GridList cellHeight={400} spacing={10} cols={3}>\n      <GridListTile cols={1}>\n        <StatsPanel title=\"Flower\" defaultData={flowerStats} onData={onFlowerStats} requiredStats={[\"hp\"]}/>\n      </GridListTile>\n      <GridListTile cols={1}>\n        <StatsPanel title=\"Feather\" defaultData={featherStats} onData={onFeatherStats} requiredStats={[\"atk\"]}/>\n      </GridListTile>\n      <GridListTile cols={1}>\n        <StatsPanel title=\"Timepiece\" defaultData={timepieceStats} onData={onTimepieceStats}/>\n      </GridListTile>\n      <GridListTile cols={1}>\n        <StatsPanel title=\"Goblet\" defaultData={gobletStats} onData={onGobletStats}/>\n      </GridListTile>\n      <GridListTile cols={1}>\n        <StatsPanel title=\"Hat\" defaultData={hatStats} onData={onHatStats}/>\n      </GridListTile>\n      <GridListTile cols={1}>\n        <StatsPanel title=\"Set Effects\" defaultData={setEffectsStats} onData={onSetEffectsStats}/>\n      </GridListTile>\n    </GridList>\n  );\n};\n\nexport default ArtifactsTab;\n","import React from \"react\";\nimport { GridList, GridListTile } from \"@material-ui/core\";\n\nimport StatsPanel from \"./StatsPanel\";\n\nconst BaseStatsTab = ({ characterStats, onCharacterStats, weaponStats, onWeaponStats }) => {\n  return (\n    <GridList cellHeight={500} spacing={10} cols={2}>\n      <GridListTile cols={1}>\n        <StatsPanel title=\"Character\" defaultData={characterStats} onData={onCharacterStats}\n                    requiredStats={[\"atk\", \"def\", \"hp\", \"critRate\", \"critDamage\", \"energyRecharge\"]}/>\n      </GridListTile>\n      <GridListTile cols={1}>\n        <StatsPanel title=\"Weapon\" defaultData={weaponStats} onData={onWeaponStats} requiredStats={[\"atk\"]}/>\n      </GridListTile>\n    </GridList>\n  );\n};\n\nexport default BaseStatsTab;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  FormControl,\n  FormGroup,\n  IconButton,\n  MenuItem,\n  Select,\n  TextField,\n  Typography\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nimport ReactUtils from \"../utils/ReactUtils\";\n\nimport stats from \"../data/stats\";\n\nimport \"./SpecialStatsForm.css\";\n\nconst SpecialStatForm = ({ defaultSpecialStat = {}, isCreationForm, onAdd, onDelete, onUpdate }) => {\n  // Helpers\n  const isValid = () => {\n    return [finalStatType, percentChange, statGroup, statGroupType].indexOf(\"\") === -1;\n  };\n  const getCurrentSpecialStat = (useNewUniqueId) => {\n    let actualUniqueId = uniqueId;\n    if (useNewUniqueId) actualUniqueId = ReactUtils.nextUniqueId(\"specialStat\");\n    return { uniqueId: actualUniqueId, finalStatType, percentChange, statGroup, statGroupType };\n  };\n\n  // State\n  const [finalStatType, setFinalStatType] = useState(defaultSpecialStat.finalStatType || \"\");\n  const [percentChange, setPercentChange] = useState(defaultSpecialStat.percentChange || \"\");\n  const [statGroup, setStatGroup] = useState(defaultSpecialStat.statGroup || \"\");\n  const [statGroupType, setStatGroupType] = useState(defaultSpecialStat.statGroupType || \"\");\n  let defaultUniqueId = defaultSpecialStat.uniqueId;\n  if (defaultUniqueId == null || isCreationForm) defaultUniqueId = -1;\n  const [uniqueId, setUniqueId] = useState(defaultUniqueId);\n\n  // Effects\n  useEffect(() => {\n    if (isCreationForm) return;\n    const specialStat = getCurrentSpecialStat();\n    if (!isValid()) return ReactUtils.onError(\"Please make sure all values are entered and valid.\");\n    onUpdate(specialStat);\n  }, [finalStatType, percentChange, statGroup, statGroupType]);\n\n  // Event Handlers\n  const onFinalStatTypeSelect = e => {\n    setFinalStatType(e.target.value);\n  };\n  const onPercentChange = e => {\n    setPercentChange(e.target.value === \"\" ? \"\" : Number(e.target.value));\n  };\n  const onStatGroupSelect = e => {\n    setStatGroup(e.target.value);\n  };\n  const onStatGroupTypeSelect = e => {\n    setStatGroupType(e.target.value);\n  };\n  const onDeleteSpecialStat = () => {\n    const currentSpecialStat = getCurrentSpecialStat();\n    onDelete(currentSpecialStat);\n  };\n  const onNewSpecialStat = () => {\n    const newSpecialStat = getCurrentSpecialStat(true);\n    if (!isValid()) return ReactUtils.onError(\"Please make sure all values are entered and valid.\");\n    setFinalStatType(\"\");\n    setPercentChange(\"\");\n    setStatGroup(\"\");\n    setStatGroupType(\"\");\n    setUniqueId(-1);\n    onAdd(newSpecialStat);\n  };\n\n  // DOM Elements\n  const statTypeItems = Object.entries(stats).map(([type, name]) => {\n    return <MenuItem key={type} value={type}>{name}</MenuItem>;\n  });\n\n  return (\n    <FormGroup row className=\"newStatForm specialStatForm\">\n      {\n        !isCreationForm &&\n        <IconButton aria-label=\"delete\" onClick={onDeleteSpecialStat}><DeleteIcon/></IconButton>\n      }\n      <Typography>Increase</Typography>\n      <FormControl className=\"formSelect\">\n        <Select id=\"finalStatType\" value={finalStatType} onChange={onFinalStatTypeSelect}>\n          {statTypeItems}\n        </Select>\n      </FormControl>\n      <Typography>by</Typography>\n      <TextField id=\"percentChange\" type=\"number\" value={percentChange} onChange={onPercentChange}/>\n      <Typography>% of</Typography>\n      <FormControl className=\"formSelect\">\n        <Select id=\"statGroup\" value={statGroup} onChange={onStatGroupSelect}>\n          <MenuItem value=\"base\">Base</MenuItem>\n          <MenuItem value=\"artifact\">Artifact</MenuItem>\n          <MenuItem value=\"total\">Total</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl className=\"formSelect\">\n        <Select id=\"statGroupType\" value={statGroupType} onChange={onStatGroupTypeSelect}>\n          {statTypeItems}\n        </Select>\n      </FormControl>\n      {\n        isCreationForm &&\n        <Button variant=\"contained\" startIcon={<AddIcon/>} onClick={onNewSpecialStat}>\n          Add\n        </Button>\n      }\n    </FormGroup>\n  );\n};\n\nexport default SpecialStatForm;\n","import React, { useEffect, useState } from \"react\";\nimport { Paper, Typography} from \"@material-ui/core\";\n\nimport SpecialStatForm from \"./SpecialStatForm\";\n\nconst SpecialStatsPanel = ({ defaultSpecialStats, onSpecialStats }) => {\n  // State\n  const [specialStats, setSpecialStats] = useState(defaultSpecialStats);\n\n  // Effects\n  useEffect(() => {\n    if (onSpecialStats) onSpecialStats(specialStats);\n  }, [specialStats]);\n\n  // Event Handlers\n  const onDeleteSpecialStat = specialStat => {\n    const existingIndex = specialStats.findIndex(stat => specialStat.uniqueId === stat.uniqueId);\n    if (existingIndex === -1) return;\n    setSpecialStats([...specialStats.slice(0, existingIndex), ...specialStats.slice(existingIndex + 1)]);\n  };\n  const onUpdateSpecialStat = specialStat => {\n    const existingIndex = specialStats.findIndex(stat => specialStat.uniqueId === stat.uniqueId);\n    if (existingIndex === -1) return;\n    setSpecialStats([\n      ...specialStats.slice(0, existingIndex),\n      specialStat,\n      ...specialStats.slice(existingIndex + 1)\n    ]);\n  };\n  const onAddSpecialStat = specialStat => {\n    setSpecialStats([...specialStats, specialStat]);\n  };\n\n  // DOM Nodes\n  const statForms = specialStats.map(specialStat => {\n    return <SpecialStatForm key={specialStat.uniqueId} defaultSpecialStat={specialStat}\n                            onDelete={onDeleteSpecialStat} onUpdate={onUpdateSpecialStat}/>\n  });\n\n  return (\n    <Paper className=\"formPanel\">\n      <Typography variant=\"h5\">Special Stats (Coming Soon)</Typography>\n      <div className=\"appliedStats appliedSpecialStats\">\n        {statForms}\n      </div>\n      <SpecialStatForm isCreationForm onAdd={onAddSpecialStat}/>\n    </Paper>\n  );\n};\n\nexport default SpecialStatsPanel;\n","import React from \"react\";\nimport { GridList, GridListTile } from \"@material-ui/core\";\n\nimport StatsPanel from \"./StatsPanel\";\nimport SpecialStatsPanel from \"./SpecialStatsPanel\";\n\nconst BonusStatsTab = ({ miscStats, onMiscStats, specialStats, onSpecialStats }) => {\n  return (\n    <GridList cellHeight={300} spacing={10} cols={2}>\n      <GridListTile cols={1}>\n        <StatsPanel title=\"Miscellaneous Stats\" defaultData={miscStats} onData={onMiscStats}/>\n      </GridListTile>\n      <GridListTile cols={1}>\n        <SpecialStatsPanel defaultSpecialStats={specialStats} onSpecialStats={onSpecialStats}/>\n      </GridListTile>\n    </GridList>\n  );\n};\n\nexport default BonusStatsTab;\n","export default class StringUtils {\n  static capitalize(str) {\n    if (!str) return str;\n    return `${str[0].toUpperCase()}${str.slice(1)}`;\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Paper,\n  Select,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\n\nimport StringUtils from \"../utils/StringUtils\";\n\nimport weapons from \"../data/weapons\";\n\nconst CharacterInfoPanel = ({ defaultData, onData }) => {\n  // State\n  const [level, setLevel] = useState(defaultData.level);\n  const [weaponType, setWeaponType] = useState(defaultData.weaponType);\n\n  // Effects\n  useEffect(() => {\n    onData({ level, weaponType });\n  }, [level, weaponType]);\n\n  // Event Handlers\n  const onLevel = e => {\n    setLevel(e.target.value === \"\" ? \"\" : Number(e.target.value));\n  };\n  const onWeaponType = e => {\n    setWeaponType(e.target.value);\n  };\n\n  // DOM Elements\n  const weaponTypeItems = Object.keys(weapons).map(type => {\n    return <MenuItem key={type} value={type}>{StringUtils.capitalize(type)}</MenuItem>;\n  });\n\n  return (\n    <Paper className=\"formPanel\">\n      <Typography variant=\"h5\">Character Info</Typography>\n      <TextField id=\"characterLevel\" label=\"Level\" type=\"number\" value={level} onChange={onLevel}/>\n      <FormControl>\n        <InputLabel id=\"weaponTypeLabel\">Weapon</InputLabel>\n        <Select id=\"weaponType\" labelId=\"weaponTypeLabel\" value={weaponType} onChange={onWeaponType}>\n          {weaponTypeItems}\n        </Select>\n      </FormControl>\n    </Paper>\n  );\n};\n\nexport default CharacterInfoPanel;\n","import MathUtils from \"./MathUtils\";\n\nimport embonus from \"../data/embonus\";\n\nexport default class DamageUtils {\n  static getDefaultErBonuses() {\n    const bonuses = {};\n    Object.keys(embonus.names).forEach(type => bonuses[type] = 0);\n    return bonuses;\n  }\n\n  static getEnemyDefense(enemyLevel) {\n    return MathUtils.roundToDecimals(5 * enemyLevel + 500, 0);\n  }\n\n  static getEnemyDefenseMultiplier(characterLevel = 0, enemyLevel = 0, defenseReduction = 0) {\n    let result;\n    if (defenseReduction > 0) {\n      result = Math.round((characterLevel + 100) / (characterLevel + enemyLevel + 200));\n    } else {\n      result = (characterLevel + 100) / ((1 - (defenseReduction / 100)) * (enemyLevel + 100) + characterLevel + 100);\n    }\n    return MathUtils.roundToDecimals(result, 2);\n  }\n\n  static getEnemyResistanceMultiplier(elementalRes = 0, elementalResReduction = 0) {\n    let result;\n    const netElementalRes = elementalRes - elementalResReduction;\n    if (netElementalRes < 0) {\n      result = 1 - ((netElementalRes / 100) / 2);\n    } else if (netElementalRes >= 0 && netElementalRes < 75) {\n      result = 1 - (netElementalRes / 100);\n    } else {\n      result = 1 / ((4 * netElementalRes / 100) + 1);\n    }\n    return MathUtils.roundToDecimals(result, 2);\n  }\n\n  static getTotalSkillDamage(skillDamage = 0, bonusDamage = 0, elementalBonus = 0, applyElementalBonus) {\n    const percentIncrease = bonusDamage + (applyElementalBonus ? elementalBonus : 0);\n    const result = MathUtils.percentIncrease(skillDamage, percentIncrease);\n    return MathUtils.roundToDecimals(result, 2);\n  }\n\n  static getBaseNonCritDamage(atk, totalSkillDamage, enemyDefenseMultiplier) {\n    const nonCrit = MathUtils.percentIncrease(atk, totalSkillDamage) * enemyDefenseMultiplier;\n    return MathUtils.roundToDecimals(nonCrit, 0);\n  }\n\n  static getBaseCritDamage(atk, totalSkillDamage, enemyDefenseMultiplier, critDamage) {\n    const nonCrit = MathUtils.percentIncrease(atk, totalSkillDamage);\n    const crit = MathUtils.percentIncrease(nonCrit, critDamage) * enemyDefenseMultiplier;\n    return MathUtils.roundToDecimals(crit, 0);\n  }\n\n  static getAverageDamage(nonCrit, crit, critRate) {\n    const weightedNonCrit =  (nonCrit * ((100 - critRate) / 100)) + (crit * (critRate / 100));\n    return MathUtils.roundToDecimals(weightedNonCrit, 0);\n  }\n\n  static getDamageTypes(element, weaponType, doesShatter) {\n    const typeMap = {\n      anemo: [\"swirl\"],\n      cryo: [\"melt\", \"superconduct\"],\n      dendro: [],\n      electro: [\"overload\", \"superconduct\", \"electroCharge\"],\n      geo: [\"shatter\"],\n      hydro: [\"vaporize\", \"electroCharge\"],\n      physical: [\"shatter\"],\n      pyro: [\"melt\", \"vaporize\", \"overload\"]\n    };\n    let result = typeMap[element] || [];\n    if (!result) result = [];\n    if ((weaponType === \"claymore\" || doesShatter) && result.indexOf(\"shatter\") === -1) result.push(\"shatter\");\n    return result.sort();\n  }\n\n  static getReactionMultiplier(type, activatingElement) {\n    if (type === \"melt\" || type === \"vaporize\") {\n      if (activatingElement === \"pyro\") return 2;\n      else return 1.5;\n    } else {\n      return 0;\n    }\n  }\n\n  static getElementalMasteryMultiplier(type, elementalMastery) {\n    let multiplier = 1;\n    if (type === \"vaporize\" || type === \"melt\") {\n      multiplier = 2.78;\n    } else if ([\"overload\", \"superconduct\", \"electroCharge\", \"shatter\", \"swirl\"].indexOf(type) !== -1) {\n      multiplier = 6.66;\n    }\n    const result = (multiplier * (elementalMastery / (1400 + elementalMastery))) * 100;\n    return MathUtils.roundToDecimals(result, 1);\n  }\n\n  static getElementalReactionDamage(type, baseDamage, characterLevel, reactionMult, elementalMasteryMult,\n                                    enemyResistanceMultiplier, elementalReactionMult = 0) {\n    if (type === \"vaporize\" || type === \"melt\") {\n      const amplifyingMult = MathUtils.percentIncrease(reactionMult, elementalMasteryMult + elementalReactionMult);\n      const scaledBaseDamage = baseDamage * amplifyingMult;\n      return MathUtils.roundToDecimals(scaledBaseDamage, 0);\n    } else {\n      const elementalDamage = this._getTransformativeReactionDamage(type, characterLevel);\n      const scaledBaseDamage = MathUtils.percentIncrease(elementalDamage, elementalMasteryMult);\n      let scaledElementalDamage = MathUtils.percentIncrease(scaledBaseDamage, elementalReactionMult);\n      return MathUtils.roundToDecimals(scaledElementalDamage * enemyResistanceMultiplier, 0);\n    }\n  }\n\n  static _getTransformativeReactionDamage(type, characterLevel) {\n    const baseDamage = embonus.superconduct[characterLevel - 1] || 0;\n    const scaledDamage = baseDamage * embonus.multipliers[type] || 0;\n    return MathUtils.roundToDecimals(scaledDamage, 0);\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Divider,\n  Paper,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\n\nimport DamageUtils from \"../utils/DamageUtils\";\n\nconst EnemyInfoPanel = ({ defaultData, onData, character }) => {\n  // State\n  const [level, setLevel] = useState(defaultData.level);\n  const [elementalRes, setElementalRes] = useState(defaultData.elementalRes);\n  const [elementalResReduction, setElementalResReduction] = useState(defaultData.elementalResReduction);\n  const [defenseReduction, setDefenseReduction] = useState(defaultData.defenseReduction);\n  const [defense, setDefense] = useState(DamageUtils.getEnemyDefense(level));\n  const [defenseMult, setDefenseMult] = useState(DamageUtils.getEnemyDefenseMultiplier(character.level, level,\n                                                                                       defenseReduction));\n  const [resMult, setRestMult] = useState(DamageUtils.getEnemyResistanceMultiplier(elementalRes,\n                                                                                   elementalResReduction));\n\n  // Effects\n  useEffect(() => {\n    setDefense(DamageUtils.getEnemyDefense(level));\n  }, [level]);\n  useEffect(() => {\n    setDefenseMult(DamageUtils.getEnemyDefenseMultiplier(character.level, level, defenseReduction));\n  }, [character, level, defenseReduction]);\n  useEffect(() => {\n    setRestMult(DamageUtils.getEnemyResistanceMultiplier(elementalRes, elementalResReduction));\n  }, [elementalRes, elementalResReduction]);\n  useEffect(() => {\n    onData({ level, elementalRes, elementalResReduction, defenseReduction, defense, defenseMult, resMult });\n  }, [level, elementalRes, elementalResReduction, defenseReduction, defense, defenseMult, resMult]);\n\n  // Event Handlers\n  const onLevel = e => {\n    setLevel(e.target.value === \"\" ? \"\" : Number(e.target.value));\n  };\n  const onElementalRes = e => {\n    setElementalRes(e.target.value === \"\" ? \"\" : Number(e.target.value));\n  };\n  const onElementalResReduction = e => {\n    setElementalResReduction(e.target.value === \"\" ? \"\" : Number(e.target.value));\n  };\n  const onDefenseReduction = e => {\n    setDefenseReduction(e.target.value === \"\" ? \"\" : Number(e.target.value));\n  };\n\n  return (\n    <Paper className=\"formPanel\">\n      <Typography variant=\"h5\">Enemy Info</Typography>\n      <TextField id=\"enemyLevel\" label=\"Level\" type=\"number\" value={level} onChange={onLevel}/>\n      <TextField id=\"elementalRes\" label=\"Elemental Resistance (%)\" type=\"number\" value={elementalRes} onChange={onElementalRes}/>\n      <TextField id=\"elementalResReduction\" label=\"Elemental Resistance Reduction (%)\" type=\"number\" value={elementalResReduction}\n                 onChange={onElementalResReduction}/>\n      <TextField id=\"defenseReduction\" label=\"Defense Reduction (%)\" type=\"number\" value={defenseReduction}\n                 onChange={onDefenseReduction}/>\n       <Divider className=\"panelDivider\"/>\n       <TextField readOnly disabled id=\"enemyDefense\" label=\"Defense\" type=\"number\" value={defense}/>\n      <TextField readOnly disabled id=\"enemyDefenseMult\" label=\"Defense Multiplier\" type=\"number\" value={defenseMult}/>\n      <TextField readOnly disabled id=\"enemyResMult\" label=\"Resistance Multiplier\" type=\"number\" value={resMult}/>\n    </Paper>\n  );\n};\n\nexport default EnemyInfoPanel;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Checkbox,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  InputLabel,\n  MenuItem,\n  Paper,\n  Select,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\n\nimport DamageUtils from \"../utils/DamageUtils\";\nimport StringUtils from \"../utils/StringUtils\";\nimport elements from \"../data/elements\";\n\nconst SkillInfoPanel = ({ defaultData, onData, elementalBonus }) => {\n  // State\n  const [damage, setDamage] = useState(defaultData.damage);\n  const [bonusDamage, setBonusDamage] = useState(defaultData.bonusDamage);\n  const [element, setElement] = useState(defaultData.element);\n  const [doesShatter, setDoesShatter] = useState(defaultData.doesShatter);\n  const [doesApplyElementalBonus, setDoesApplyElementalBonus] = useState(defaultData.doesApplyElementalBonus);\n  const [totalDamage, setTotalDamage] = useState(DamageUtils.getTotalSkillDamage(damage, bonusDamage, elementalBonus,\n                                                                                 doesApplyElementalBonus));\n\n  // Effects\n  useEffect(() => {\n   setTotalDamage(DamageUtils.getTotalSkillDamage(damage, bonusDamage, elementalBonus, doesApplyElementalBonus));\n  }, [damage, bonusDamage, elementalBonus, doesApplyElementalBonus]);\n  useEffect(() => {\n    onData({ damage, bonusDamage, element, doesShatter, doesApplyElementalBonus, totalDamage });\n  }, [damage, bonusDamage, element, doesShatter, doesApplyElementalBonus, totalDamage]);\n\n  // Event Handlers\n  const onDamage = e => {\n    setDamage(e.target.value === \"\" ? \"\" : Number(e.target.value));\n  };\n  const onBonusDamage = e => {\n    setBonusDamage(e.target.value === \"\" ? \"\" : Number(e.target.value));\n  };\n  const onElement = e => {\n    setElement(e.target.value);\n  };\n  const onDoesShatter = e => {\n    setDoesShatter(e.target.checked);\n  };\n  const onDoesApplyElementalBonus = e => {\n    setDoesApplyElementalBonus(e.target.checked);\n  };\n\n  // DOM Elements\n  const elementItems = Object.keys(elements).map(element => {\n    return <MenuItem key={element} value={element}>{StringUtils.capitalize(element)}</MenuItem>;\n  });\n  const doesShatterCheckbox = <Checkbox checked={doesShatter} onChange={onDoesShatter}/>;\n  const doesApplyElementalBonusCheckbox = <Checkbox checked={doesApplyElementalBonus}\n                                                    onChange={onDoesApplyElementalBonus}/>;\n\n  return (\n    <Paper className=\"formPanel\">\n      <Typography variant=\"h5\">Skill Info</Typography>\n      <TextField id=\"skillDamage\" label=\"Damage (%)\" type=\"number\" value={damage} onChange={onDamage}/>\n      <TextField id=\"bonusDamage\" label=\"Bonus Damage (%)\" type=\"number\" value={bonusDamage} onChange={onBonusDamage}/>\n      <FormControl>\n        <InputLabel id=\"elementLabel\">Element</InputLabel>\n        <Select id=\"element\" labelId=\"elementLabel\" value={element} onChange={onElement}>\n          {elementItems}\n        </Select>\n      </FormControl>\n      <FormControlLabel control={doesShatterCheckbox} label=\"Damage Shatters\"/>\n      <FormControlLabel control={doesApplyElementalBonusCheckbox} label=\"Apply Elemental Bonus\"/>\n      <Divider className=\"panelDivider\"/>\n      <TextField readOnly disabled id=\"totalDamage\" label=\"Total Damage (%)\" type=\"number\" value={totalDamage}/>\n    </Paper>\n  );\n};\n\nexport default SkillInfoPanel;\n","import React from \"react\";\nimport { GridList, GridListTile } from \"@material-ui/core\";\n\nimport CharacterInfoPanel from \"./CharacterInfoPanel\";\nimport EnemyInfoPanel from \"./EnemyInfoPanel\";\nimport SkillInfoPanel from \"./SkillInfoPanel\";\n\nconst DamageInfoTab = ({ character, onCharacter, enemy, onEnemy, skill, onSkill, elementalBonus }) => {\n  return (\n    <GridList cellHeight={500} spacing={10} cols={3}>\n      <GridListTile cols={1}>\n        <CharacterInfoPanel defaultData={character} onData={onCharacter}/>\n      </GridListTile>\n      <GridListTile cols={1}>\n        <EnemyInfoPanel defaultData={enemy} onData={onEnemy} character={character}/>\n      </GridListTile>\n      <GridListTile cols={1}>\n        <SkillInfoPanel defaultData={skill} onData={onSkill} elementalBonus={elementalBonus}/>\n      </GridListTile>\n    </GridList>\n  );\n};\n\nexport default DamageInfoTab;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField\n} from \"@material-ui/core\";\n\nimport DamageUtils from \"../utils/DamageUtils\";\n\nimport embonus from \"../data/embonus\";\n\nimport \"./ExpectedDamageTab.css\";\n\nconst ExpectedDamageTab = ({ character, enemy, skill, finalStats, defaultErBonuses, onErBonuses }) => {\n  // State\n  const [erBonuses, setErBonuses] = useState(defaultErBonuses);\n\n  // Effects\n  useEffect(() => {\n    onErBonuses(erBonuses);\n  }, [erBonuses]);\n\n  // Event Handlers\n  const onErBonus = (e, type) => {\n    erBonuses[type] = e.target.value === \"\" ? \"\" : Number(e.target.value);\n    const newBonuses = Object.assign({}, erBonuses);\n    setErBonuses(newBonuses);\n  };\n\n  // DOM Nodes\n  const reactionTypes = DamageUtils.getDamageTypes(skill.element, character.weaponType, skill.doesShatter) || [];\n  const baseNonCrit = DamageUtils.getBaseNonCritDamage(finalStats.atk, skill.totalDamage, enemy.defenseMult);\n  const baseCrit = DamageUtils.getBaseCritDamage(finalStats.atk, skill.totalDamage, enemy.defenseMult,\n                                                 finalStats.critDamage);\n  const baseAverage = DamageUtils.getAverageDamage(baseNonCrit, baseCrit, finalStats.critRate);\n  const baseRow = (\n    <TableRow>\n      <TableCell component=\"th\" scope=\"row\">Base Damage</TableCell>\n      <TableCell>0</TableCell>\n      <TableCell>0</TableCell>\n      <TableCell>0</TableCell>\n      <TableCell>{baseNonCrit}</TableCell>\n      <TableCell>{baseCrit}</TableCell>\n      <TableCell>{baseAverage}</TableCell>\n    </TableRow>\n  );\n  const reactionRows = reactionTypes.map(type => {\n    const reactionMult = DamageUtils.getReactionMultiplier(type, skill.element);\n    const elementalMasteryMult = DamageUtils.getElementalMasteryMultiplier(type, finalStats.elementalMastery);\n    const elementalReactionMult = erBonuses[type] || 0;\n    const elementalNonCrit = DamageUtils.getElementalReactionDamage(type, baseNonCrit, character.level, reactionMult,\n                                                                    elementalMasteryMult, enemy.resMult,\n                                                                    elementalReactionMult);\n    const elementalCrit = DamageUtils.getElementalReactionDamage(type, baseCrit, character.level, reactionMult,\n                                                                 elementalMasteryMult, enemy.resMult,\n                                                                 elementalReactionMult);\n    const elementalAverage = DamageUtils.getAverageDamage(elementalNonCrit, elementalCrit, finalStats.critRate);\n    return (\n      <TableRow key={type}>\n        <TableCell component=\"th\" scope=\"row\">{embonus.names[type]}</TableCell>\n        <TableCell>{reactionMult * 100}</TableCell>\n        <TableCell>{elementalMasteryMult}</TableCell>\n        <TableCell>\n          <TextField id=\"erBonus\" type=\"number\" value={erBonuses[type]} onChange={e => onErBonus(e, type)}/>\n        </TableCell>\n        {\n          type === \"melt\" || type === \"vaporize\"\n            ?\n              <>\n                <TableCell>{elementalNonCrit}</TableCell>\n                <TableCell>{elementalCrit}</TableCell>\n                <TableCell>{elementalAverage}</TableCell>\n              </>\n            :\n              <TableCell colSpan={3}>{elementalNonCrit}</TableCell>\n        }\n      </TableRow>\n    );\n  });\n\n  return (\n    <TableContainer className=\"expectedDamageTab\" component={Paper}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Damage Type</TableCell>\n            <TableCell>Reaction Multiplier (%)</TableCell>\n            <TableCell>Elemental Mastery Multiplier (%)</TableCell>\n            <TableCell>Elemental Reaction Bonus (%)</TableCell>\n            <TableCell>Non-Crit</TableCell>\n            <TableCell>Crit</TableCell>\n            <TableCell>Average</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {baseRow}\n          {reactionRows}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default ExpectedDamageTab;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField\n} from \"@material-ui/core\";\nimport CopyIcon from \"@material-ui/icons/AssignmentReturned\";\nimport LinkIcon from \"@material-ui/icons/Link\";\n\nimport ReactUtils from \"../utils/ReactUtils\";\n\nconst SaveDialog = ({ open, setOpen, saveData }) => {\n  // Helpers\n  const getShareableLink = (saveData) => {\n    const encodedData = btoa(JSON.stringify(saveData));\n    const { protocol, host, pathname } = window.location;\n    return `${protocol}//${host}${pathname}?data=${encodedData}`;\n  };\n\n  // State\n  const [isCopyingLink, setIsCopyingLink] = useState(false);\n  const saveDataText = JSON.stringify(saveData, null, 2);\n  const shareableLink = getShareableLink(saveData);\n\n  // Effects\n  useEffect(() => {\n    if (!isCopyingLink) return;\n    shareableLinkTextareaRef.current.select();\n    document.execCommand(\"copy\");\n    ReactUtils.onSuccess(\"Copied data to clipboard!\");\n    setIsCopyingLink(false);\n  }, [isCopyingLink]);\n\n  // Event Handlers\n  const onCopySaveData = e => {\n    saveDataTextareaRef.current.select();\n    document.execCommand(\"copy\");\n    e.target.focus();\n    ReactUtils.onSuccess(\"Copied data to clipboard!\");\n  };\n  const onCopyLink = () => {\n    setIsCopyingLink(true);\n  };\n\n  // DOM Elements\n  const saveDataTextareaRef = useRef(null);\n  const shareableLinkTextareaRef = useRef(null);\n  const shareableLinkStyle = isCopyingLink ? null : { display: \"none\" };\n\n  if (!open) return null;\n  return (\n    <>\n      <Dialog fullWidth open={open} onClose={() => setOpen(false)}>\n        <DialogTitle id=\"saveDataTitle\">Save Data</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Copy-paste the output below to load your artifacts into the app next time.\n          </DialogContentText>\n          <TextField readOnly fullWidth multiline id=\"saveData\" className=\"saveData\" label=\"Save Data\" margin=\"dense\"\n                     inputRef={saveDataTextareaRef} value={saveDataText}\n                     inputProps={{ style: { fontFamily: \"source-code-pro, monospace\" } }}/>\n           <TextField readOnly fullWidth id=\"link\" label=\"Link\" inputRef={shareableLinkTextareaRef}\n                      style={shareableLinkStyle} value={shareableLink}/>\n        </DialogContent>\n        <DialogActions>\n          <Button variant=\"contained\" startIcon={<CopyIcon/>} onClick={onCopySaveData}>Copy to Clipboard</Button>\n          <Button variant=\"contained\" startIcon={<LinkIcon/>} onClick={onCopyLink}>Copy Link to Clipboard</Button>\n          <Button variant=\"contained\" onClick={() => setOpen(false)}>Ok</Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default SaveDialog;\n","import React from \"react\";\nimport { GridList, GridListTile } from \"@material-ui/core\";\n\nimport StatsPanel from \"./StatsPanel\";\n\nconst TotalsTab = ({ baseStats, artifactsStats, finalStats }) => {\n  return (\n    <GridList cellHeight={500} spacing={10} cols={3}>\n      <GridListTile cols={1}>\n        <StatsPanel readOnly title=\"Base Stat Totals\" data={baseStats}/>\n      </GridListTile>\n      <GridListTile cols={1}>\n        <StatsPanel readOnly title=\"Artifact Totals\" data={artifactsStats}/>\n      </GridListTile>\n      <GridListTile cols={1}>\n        <StatsPanel readOnly title=\"Final Stats\" data={finalStats}/>\n      </GridListTile>\n    </GridList>\n  );\n};\n\nexport default TotalsTab;\n","import ReactGA from \"react-ga\";\n\nclass AnalyticsUtils {\n  constructor() {\n    try {\n      ReactGA.initialize(\"G-SZJNJJP2JP\");\n    } catch {\n      this._isDisabled = true;\n    }\n  }\n\n  logEvent(params) {\n    if (this._isDisabled) return;\n    ReactGA.event(params);\n  }\n\n}\n\nexport default new AnalyticsUtils();\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Tabs,\n  Tab,\n  Typography,\n} from \"@material-ui/core\";\n\nimport ArtifactUtils from \"../utils/ArtifactUtils\";\nimport ArtifactsTab from \"./ArtifactsTab\";\nimport BaseStatsTab from \"./BaseStatsTab\";\nimport BonusStatsTab from \"./BonusStatsTab\";\nimport DamageInfoTab from \"./DamageInfoTab\";\nimport ExpectedDamageTab from \"./ExpectedDamageTab\";\nimport SaveDialog from \"../main/SaveDialog\";\nimport TotalsTab from \"./TotalsTab\";\n\nimport AnalyticsUtils from \"../utils/AnalyticsUtils\";\nimport DamageUtils from \"../utils/DamageUtils\";\n\nimport \"./Calculator.css\";\n\nconst Calculator = ({ data }) => {\n  // State\n  const [isSavePopupVisible, setIsSavePopupVisible] = useState(false);\n  const [saveData, setSaveData] = useState({});\n  const [tab, setTab] = useState(0);\n  const [character, setCharacter] = useState(data.character || {\n    level: 90,\n    weaponType: \"\",\n  });\n  const [enemy, setEnemy] = useState(data.enemy || {\n    level: 83,\n    elementalRes: 10,\n    elementalResReduction: 0,\n    defenseReduction: 0\n  });\n  const [skill, setSkill] = useState(data.skill || {\n    damage: 0,\n    bonusDamage: 0,\n    element: \"\",\n    doesShatter: false,\n    doesApplyElementalBonus: true\n  });\n  const [characterStats, setCharacterStats] = useState(data.characterStats || {\n    atk: 0,\n    def: 0,\n    hp: 0,\n    critRate: 5,\n    critDamage: 50,\n    energyRecharge: 100\n  });\n  const [weaponStats, setWeaponStats] = useState(data.weaponStats || {});\n  const [setEffectsStats, setSetEffectsStats] = useState(data.setEffectsStats || {});\n  const [flowerStats, setFlowerStats] = useState(data.flowerStats || {\n    hp: 0\n  });\n  const [featherStats, setFeatherStats] = useState(data.featherStats || {\n    atk: 0\n  });\n  const [timepieceStats, setTimepieceStats] = useState(data.timepieceStats || {});\n  const [gobletStats, setGobletStats] = useState(data.gobletStats || {});\n  const [hatStats, setHatStats] = useState(data.hatStats || {});\n  const [miscStats, setMiscStats] = useState(data.miscStats || {});\n  const [specialStats, setSpecialStats] = useState(data.specialStats || []);\n  const [erBonuses, setErBonuses] = useState(data.erBonuses || DamageUtils.getDefaultErBonuses());\n  const [baseStats, setBaseStats] = useState({});\n  const [artifactsStats, setArtifactsStats] = useState({});\n  const [finalStats, setFinalStats] = useState({});\n\n  // Effects\n  useEffect(() => {\n    setBaseStats(ArtifactUtils.addStats(characterStats, weaponStats));\n    setArtifactsStats(ArtifactUtils.addStats(flowerStats, featherStats, timepieceStats, gobletStats, hatStats,\n                                             setEffectsStats));\n  }, [\n    characterStats, weaponStats, flowerStats, featherStats, timepieceStats, gobletStats, hatStats, setEffectsStats,\n    miscStats, specialStats\n  ]);\n  useEffect(() => {\n    setFinalStats(ArtifactUtils.getFinalStats(characterStats, weaponStats, baseStats, artifactsStats, miscStats,\n                                              specialStats));\n  }, [characterStats, weaponStats, baseStats, artifactsStats, miscStats, specialStats]);\n\n  // Event Handlers\n  const onSave = () => {\n    const saveData = {\n      character, skill, characterStats, weaponStats, setEffectsStats, flowerStats, featherStats,\n      timepieceStats, gobletStats, hatStats, miscStats, specialStats, erBonuses\n    };\n    setSaveData(saveData);\n    setIsSavePopupVisible(true);\n    AnalyticsUtils.logEvent({\n      category: \"User\",\n      action: \"Save\",\n      label: btoa(JSON.stringify(saveData, null, 2))\n    });\n  };\n  const onTab = (e, value) => {\n    AnalyticsUtils.logEvent({\n      category: \"Navigation\",\n      action: \"Tab Switch\",\n      label: tabNames[value]\n    });\n    setTab(value);\n  };\n\n  // DOM Nodes\n  const tabNames = [\"Damage Info\", \"Base Stats\", \"Artifacts\", \"Bonuses\", \"Totals\", \"Damage\"];\n  const tabs = tabNames.map(name => <Tab key={name} label={name}/>);\n  const tabPanels = [\n    <DamageInfoTab key=\"damage\" character={character} onCharacter={setCharacter} enemy={enemy} onEnemy={setEnemy}\n                   skill={skill} onSkill={setSkill} elementalBonus={finalStats.elementalBonus}/>,\n    <BaseStatsTab key=\"baseStats\" characterStats={characterStats} onCharacterStats={setCharacterStats}\n                  weaponStats={weaponStats} onWeaponStats={setWeaponStats}/>,\n    <ArtifactsTab key=\"artifacts\" flowerStats={flowerStats} onFlowerStats={setFlowerStats} featherStats={featherStats}\n                  onFeatherStats={setFeatherStats} timepieceStats={timepieceStats}\n                  onTimepieceStats={setTimepieceStats} gobletStats={gobletStats} onGobletStats={setGobletStats}\n                  hatStats={hatStats} onHatStats={setHatStats} setEffectsStats={setEffectsStats}\n                  onSetEffectsStats={setSetEffectsStats}/>,\n    <BonusStatsTab key=\"bonusStats\" miscStats={miscStats} onMiscStats={setMiscStats} specialStats={specialStats}\n                   onSpecialStats={setSpecialStats}/>,\n    <TotalsTab key=\"totals\" baseStats={baseStats} artifactsStats={artifactsStats} finalStats={finalStats}/>,\n    <ExpectedDamageTab character={character} enemy={enemy} skill={skill} finalStats={finalStats}\n                       defaultErBonuses={erBonuses} onErBonuses={setErBonuses}/>\n  ];\n\n  return (\n    <div className=\"calculator\">\n      <header>\n        <div className=\"headerLeft\">\n          <Typography variant=\"h4\" gutterBottom>Genshin Impact Damage Calculator</Typography>\n          <div className=\"headerActions\">\n            <Button variant=\"contained\" onClick={onSave}>Save</Button>\n          </div>\n        </div>\n        <Tabs variant=\"scrollable\" scrollButtons=\"auto\" value={tab} onChange={onTab}>\n          {tabs}\n        </Tabs>\n      </header>\n      <div className=\"tabContent\">\n        {tabPanels[tab]}\n      </div>\n      <SaveDialog open={isSavePopupVisible} setOpen={setIsSavePopupVisible} saveData={saveData}/>\n    </div>\n  );\n};\n\nexport default Calculator;\n","import React, {useEffect, useState} from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField\n} from \"@material-ui/core\";\n\nimport AnalyticsUtils from \"../utils/AnalyticsUtils\";\n\nconst LoadDialog = ({ open, setOpen, onSaveDataSubmit }) => {\n  // State\n  const [error, setError] = useState(\"\");\n  const [saveDataText, setSaveDataText] = useState(\"\");\n\n  // Effects\n  useEffect(() => {\n    setError(\"\");\n  }, [saveDataText]);\n\n  // Event Handlers\n  const processSaveData = () => {\n    try {\n      const saveData = JSON.parse(saveDataText);\n      setOpen(false);\n      onSaveDataSubmit(saveData);\n      AnalyticsUtils.logEvent({\n        category: \"User\",\n        action: \"Load\",\n        label: btoa(JSON.stringify(saveData, null, 2))\n      });\n    } catch {\n      setError(\"Could not parse save data, please check that it is correctly formatted.\");\n    }\n  };\n  const submitOnEnter = e => {\n    if (e.key !== \"Enter\") return;\n    e.preventDefault();\n    processSaveData();\n  };\n\n  return (\n    <Dialog fullWidth open={open} onClose={() => setOpen(false)}>\n      <DialogTitle id=\"saveDataTitle\">Load Save Data</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          If you have save data from previously using the app, copy-paste it below.\n        </DialogContentText>\n        <TextField autoFocus fullWidth multiline id=\"saveData\" label=\"Save Data\" margin=\"dense\"\n                   onChange={e => setSaveDataText(e.target.value)} onKeyDown={submitOnEnter}/>\n        {error && <DialogContentText color=\"error\">{error}</DialogContentText>}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => setOpen(false)}>Cancel</Button>\n        <Button onClick={processSaveData}>Load</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default LoadDialog;\n","import React, { useState } from \"react\";\nimport  {\n  Button,\n  Typography\n} from \"@material-ui/core\";\n\nimport \"./Welcome.css\";\nimport LoadDialog from \"./LoadDialog\";\n\nconst Welcome = ({ loadApp }) => {\n  // State\n  const [isPopupVisible, setIsPopupVisible] = useState(false);\n\n  return (\n    <>\n      <div className=\"welcome\">\n        <Typography variant=\"h2\" gutterBottom>Genshin Impact Damage Calculator</Typography>\n        <div className=\"actionButtons\">\n          <Button variant=\"contained\" color=\"primary\" onClick={() => setIsPopupVisible(true)}>Load Save</Button>\n          <Button variant=\"contained\" onClick={loadApp}>Get Started</Button>\n        </div>\n      </div>\n      <LoadDialog open={isPopupVisible} setOpen={setIsPopupVisible} onSaveDataSubmit={loadApp}/>\n    </>\n  );\n};\n\nexport default Welcome;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport {\n  createMuiTheme,\n  CssBaseline,\n  Link, Snackbar,\n  ThemeProvider,\n  Typography,\n} from \"@material-ui/core\";\n\nimport ReactUtils from \"./utils/ReactUtils\";\n\nimport Calculator from \"./calculator/Calculator\";\nimport Welcome from \"./main/Welcome\";\n\nimport \"./App.css\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst App = () => {\n  // State\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [saveData, setSaveData] = useState({});\n  const [isSuccessOpen, setIsSuccessOpen] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [isErrorOpen, setIsErrorOpen] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  // Hooks\n  const location = useLocation();\n  const history = useHistory();\n  const query = new URLSearchParams(location.search);\n\n  // Effects\n  useEffect(() => {\n    ReactUtils.registerSuccessHandler(onSuccess);\n    ReactUtils.registerErrorHandler(onError);\n\n    if (query.has(\"data\")) {\n      try {\n        const saveDataFromUrl = JSON.parse(atob(query.get(\"data\")));\n        loadApp(saveDataFromUrl);\n      } catch {\n        ReactUtils.onError(\"There was a problem loading the data from the URL.\");\n      }\n      query.delete(\"data\");\n      history.push(\"\");\n    }\n  }, []);\n\n  // Theme\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: \"dark\",\n        },\n      })\n  );\n\n  // Event Handlers\n  const onSuccess = message => {\n    setSuccessMessage(message);\n    setIsSuccessOpen(true);\n  };\n  const onError = message => {\n    setErrorMessage(message);\n    setIsErrorOpen(true);\n  };\n  const loadApp = loadedSaveData => {\n    setSaveData(Object.assign(saveData, loadedSaveData));\n    setIsLoaded(true);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline/>\n      <div className=\"app\">\n        {\n          !isLoaded\n            ? <Welcome loadApp={loadApp}/>\n            : <Calculator data={saveData}/>\n        }\n        <div className=\"credits\">\n          <Typography>\n            View on <Link href=\"https://github.com/knazir/genshin-calc\" target=\"_blank\">GitHub</Link>\n          </Typography>\n        </div>\n      </div>\n      <Snackbar open={isSuccessOpen} autoHideDuration={3000} onClose={() => setIsSuccessOpen(false)}>\n        <Alert onClose={() => setIsSuccessOpen(false)} severity=\"success\">\n          {successMessage}\n        </Alert>\n      </Snackbar>\n      <Snackbar open={isErrorOpen} autoHideDuration={3000} onClose={() => setIsErrorOpen(false)}>\n        <Alert onClose={() => setIsErrorOpen(false)} severity=\"error\">\n          {errorMessage}\n        </Alert>\n      </Snackbar>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Router>\n    <App/>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}